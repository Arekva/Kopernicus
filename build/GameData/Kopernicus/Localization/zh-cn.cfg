Localization
{
    zh-cn
    {
        #Kopernicus_UI_TrackingBody = 跟踪天体
        #Kopernicus_UI_AutoTracking = 自动
        #Kopernicus_UI_AutoTrackingBodyName = <<1>> (自动)
        #Kopernicus_UI_SelectBody = 选择跟踪天体
        #Kopernicus_UI_SelectBody_Msg = 请选择要用此太阳能板跟踪的天体.
        #Kopernicus_UI_PanelBlocked = 被 <<1>> 阻挡
        #Kopernicus_UI_DirectSunlight = 阳光直射
        #Kopernicus_UI_Underwater = 在水下
    //
    //
    // PartModules PAW UI Groups
    //
    #KERBALISMLITE_Group_Science = 科学 // "Science"
    #KERBALISMLITE_Group_Greenhouse = 温室 // "Greenhouse"
    #KERBALISMLITE_Group_Habitat = 生活环境 // "Habitat"
    #KERBALISMLITE_Group_Radiation = 辐射 // "Radiation"
    #KERBALISMLITE_Group_Configuration = 配置 // "Configuration"
    #KERBALISMLITE_Group_Processes = 处理机 // "Processes"
    #KERBALISMLITE_Group_Reliability = 可靠性 // "Reliability"
    #KERBALISMLITE_Group_Sensors = 传感器 // "Sensors"
    //
    // Generic strings
    //
    #KERBALISMLITE_Generic_ON = 开 // "on"
    #KERBALISMLITE_Generic_OFF = 关 // "off"
    #KERBALISMLITE_Generic_ENABLED = 开启 // "enabled"
    #KERBALISMLITE_Generic_DISABLED = 关闭 // "disabled"
    #KERBALISMLITE_Generic_ACTIVE = 激活 // "active"
    #KERBALISMLITE_Generic_INACTIVE = 关闭 // "inactive"
    #KERBALISMLITE_Generic_ALWAYSON = 一直开启 // "always on"
    #KERBALISMLITE_Generic_RECORDING = 记录中 // "recording"
    #KERBALISMLITE_Generic_STOPPED = 停止 // "stopped"
    #KERBALISMLITE_Generic_RUNNING = 运行中 // "running"
    #KERBALISMLITE_Generic_EXTENDED = 扩展 // "extended"
    #KERBALISMLITE_Generic_RETRACTED = 收回 // "retracted"
    #KERBALISMLITE_Generic_DEPLOYED = 扩展 // "extended"
    #KERBALISMLITE_Generic_BROKEN = 损坏 // "broken"
    #KERBALISMLITE_Generic_EXTENDING = 展开中 // "extending"
    #KERBALISMLITE_Generic_RETRACTING = 收回中 // "retracting"
    #KERBALISMLITE_Generic_YES = 是 // "yes"
    #KERBALISMLITE_Generic_NO = 无 // "no"
    #KERBALISMLITE_Generic_RETRACT = 收回 // "retract"
    #KERBALISMLITE_Generic_DEPLOY = 展开 // "deploy"
    #KERBALISMLITE_Generic_FROM = 从 // "from"
    #KERBALISMLITE_Generic_TO = 到 // "to"
    #KERBALISMLITE_Generic_NONE = 无 // "none"
    #KERBALISMLITE_Generic_NOTHING = 空 // "nothing"
    #KERBALISMLITE_Generic_SLOTS = 插槽 // "slots"
    #KERBALISMLITE_Generic_SLOT = 插槽 // "slot"
    #KERBALISMLITE_Generic_AVERAGE = 平均 // "average"
    #KERBALISMLITE_Generic_notdeployed = 未展开 // "not deployed"
    #KERBALISMLITE_Generic_PERPETUAL = 永久 // "perpetual"
    #KERBALISMLITE_Generic_NEVER = 从不 // "never"
    #KERBALISMLITE_Generic_NOMINAL = 正常 // "nominal"
    #KERBALISMLITE_Generic_perSecond = /秒 // "/s"
    #KERBALISMLITE_Generic_perMinute = /分 // "/m"
    #KERBALISMLITE_Generic_perHour = /时 // "/h"
    #KERBALISMLITE_Generic_perDay = /天 // "/d"
    #KERBALISMLITE_Generic_perYear = /年 // "/y"
    #KERBALISMLITE_Generic_START = 启动 // "start"
    #KERBALISMLITE_Generic_STOP = 停止 // "stop"
    #KERBALISMLITE_Generic_search = 搜索 // "search"
    //$HIS_HER
    #KERBALISMLITE_Kerbal_his = 他的 // "his"
    #KERBALISMLITE_Kerbal_her = 她的 // "her"

    //
    // Hardcoded resource brokers (consumers/producers) localization
    // Shown in the resource telemetry tooltip
    //
    #KERBALISMLITE_Brokers_Others = 其他 // "others"
    #KERBALISMLITE_Brokers_SolarPanel = 太阳能电池板 // "solar panel"
    #KERBALISMLITE_Brokers_KSPIEGenerator = KSPIE发电机 // "KSPIE generator"
    #KERBALISMLITE_Brokers_FissionReactor = 聚变反应堆 // "fission generator"
    #KERBALISMLITE_Brokers_RTG = 放射性同位素发生器 // "radioisotope generator"
    #KERBALISMLITE_Brokers_ScienceLab = 科学实验室 // "science lab"
    #KERBALISMLITE_Brokers_Light = 灯 // "light"
    #KERBALISMLITE_Brokers_Boiloff = 蒸发 // "boiloff"
    #KERBALISMLITE_Brokers_Cryotank = 低温燃料罐 // "cryo tank"
    #KERBALISMLITE_Brokers_Greenhouse = 温室 // "greenhouse"
    #KERBALISMLITE_Brokers_Deploy = 展开 // "deploy"
    #KERBALISMLITE_Brokers_Experiment = 实验 // "experiment"
    #KERBALISMLITE_Brokers_Command = 命令 // "command"
    #KERBALISMLITE_Brokers_GravityRing = 重力环 // "gravity ring"
    #KERBALISMLITE_Brokers_Scanner = 扫描仪器 // "scanner"
    #KERBALISMLITE_Brokers_Laboratory = 实验室 // "laboratory"
    #KERBALISMLITE_Brokers_CommsIdle = 通讯(闲置) // "comms (idle)"
    #KERBALISMLITE_Brokers_CommsXmit = 通讯(传输) // "comms (xmit)"
    #KERBALISMLITE_Brokers_StockConverter = 转接器 // "converter"
    #KERBALISMLITE_Brokers_StockDrill = 钻头 // "drill"
    #KERBALISMLITE_Brokers_Harvester = 资源收集 // "harvester"
    //
    //Contracts 合同
    //
    #KERBALISMLITE_Contracts_radTitle = 穿过辐射带 // "Cross the radiation belt"
    #KERBALISMLITE_Contracts_radDesc = 一位杰出的科学家预测,这颗行星周围有两条超带电粒子带.现在我们需要确认它们的存在,并找出它们到底有多致命. // "A brilliant scientist predicted two belts of super-charged particles surrounding the planet. Now we need to confirm their existence and find out how deadly they really are."
    #KERBALISMLITE_Contracts_radComplete = 该任务证实了Kerbin上存在两个辐射带. 早期数据显示辐射水平极高 // "The mission confirmed the presence of two radiation belts around the planet. Early data suggest extreme levels of radiation."
    #KERBALISMLITE_Contracts_heliopauseTitle = 穿过日球层顶 // "Cross the heliopause"
    #KERBALISMLITE_Contracts_heliopauseDesc = 在日球层顶之外还有什么?我们一无所知.所以需要你来帮忙. // "What is out there, beyond the heliopause? The truth is, we don't know. That's where you come in."
    #KERBALISMLITE_Contracts_heliopauseComplete = 我们走得太远了,大脑无法理解.除了太阳风顶层,还有来自星际空间的奇妙景观以及更多的辐射. // "We went so far the mind doesn't comprehend it. Beyond the heliopause there are the wonders of interstellar space, and more radiation."
    #KERBALISMLITE_Contracts_orbitTitle = 将一个船员送入轨道30天 // "Put a Kerbal in orbit for 30 days"
    #KERBALISMLITE_Contracts_orbitDesc = 进入轨道比我们预期的要容易.现在是时候让坎巴拉人在轨道上存活30天了. // "Obtaining an orbit was easier than we expected. Now it is time to keep a Kerbal alive in orbit for 30 days."
    #KERBALISMLITE_Contracts_orbitComplete = 这次任务是成功的,尽管我们的人有一点无聊.我们有大量关于长期在太空生活的数据. // "The mission was a success, albeit the Kerbal is a bit bored. We have plenty of data about long-term permanence in space."
    #KERBALISMLITE_Contracts_foodTitle = 在太空中收获食物 // "Harvest food in space"
    #KERBALISMLITE_Contracts_foodDesc = 既然我们已经掌握了在太空中种植粮食的技术,我们或许应该进行试验.在太空里的任意温室中收获食物. // ""Now that we got the technology to grow food in space, we should probably test it. Harvest food from a greenhouse in space."
    #KERBALISMLITE_Contracts_foodComplete = 我们已经在太空中取得收成!据科学家说,食物还挺好吃的. // "We harvested food in space, and our scientists says it is actually delicious."
    #KERBALISMLITE_Contracts_sampleTitle = 在太空中分析样本 // "Analyze samples in space"
    #KERBALISMLITE_Contracts_sampleDesc = 理论上，这个实验室可以在太空中分析样品.我们应该通过在太空中分析一些样本来验证它是否有效 // "The Laboratory can analyze samples in space, in theory. We should check if this actually work by and analyzing some samples in space."
    #KERBALISMLITE_Contracts_sampleComplete = 我们的太空实验室分析出来的结果很棒，也许比在任务控制中心的科学家通常做的分析还要好。先不要告诉他们。 // "Our Laboratory analysis was good, perhaps even better than the ones done usually by our scientists at mission control. But don't tell'em."
    //
    // Body info UI
    //
    #KERBALISMLITE_BodyInfo_BodyInfoToggleHelp = 按 <<1>> 键再次打开此窗口 // "Press <<1>> to open this window again"
    #KERBALISMLITE_BodyInfo_stormcycle = <<1>>周期 // "<<1>> cycle"
    #KERBALISMLITE_BodyInfo_title = 天体信息 // "BODY INFO"
    #KERBALISMLITE_BodyInfo_SURFACE = 地面 // "SURFACE"
    #KERBALISMLITE_BodyInfo_temperature = 温度 // "temperature"
    #KERBALISMLITE_BodyInfo_solarflux = 太阳辐射通量 // "solar flux"
    #KERBALISMLITE_BodyInfo_radiation = 辐射值 // "radiation"
    #KERBALISMLITE_BodyInfo_ATMOSPHERE = 大气 // "ATMOSPHERE"
    #KERBALISMLITE_BodyInfo_breathable = 可呼吸 // "breathable"
    #KERBALISMLITE_BodyInfo_breathable_yes = 是 // "yes"
    #KERBALISMLITE_BodyInfo_breathable_no = 否 // "no"
    #KERBALISMLITE_BodyInfo_lightabsorption = 光吸收 // "light absorption"
    #KERBALISMLITE_BodyInfo_gammaabsorption = γ射线吸收 // "gamma absorption"
    #KERBALISMLITE_BodyInfo_RADIATION = 辐射 // "RADIATION"
    #KERBALISMLITE_BodyInfo_solaractivity = 太阳活动 // "solar activity"
    #KERBALISMLITE_BodyInfo_radiationonsurface = 地面辐射: // "radiation on surface:"
    #KERBALISMLITE_BodyInfo_innerbelt = 内部辐射带: // "inner belt: "
    #KERBALISMLITE_BodyInfo_outerbelt = 外部辐射带: // "outer belt: "
    #KERBALISMLITE_BodyInfo_magnetopause = 磁层: // "magnetopause:"
    #KERBALISMLITE_BodyInfo_show = 显示 // "show"
    #KERBALISMLITE_BodyInfo_hide = 隐藏 // "hide"
    #KERBALISMLITE_BodyInfo_unknown = 未知 // "unknown"
    //
    // Monitor UI
    //
    #KERBALISMLITE_Monitor_GoComfirm = 您是否真的要切换到载具<<1>>? // "Do you really want go to <<1>> vessel?"
    #KERBALISMLITE_Monitor_novessels = 无可用载具 // "no vessels"
    #KERBALISMLITE_Monitor_Gotovessel = 切换到载具! // "Go to vessel!"
    #KERBALISMLITE_Monitor_Warning_title = 警告! // "Warning!"
    #KERBALISMLITE_Monitor_GoComfirm_button1 = 切换 // "Go"
    #KERBALISMLITE_Monitor_GoComfirm_button2 = 目标 // "Target"
    #KERBALISMLITE_Monitor_GoComfirm_button3 = 留下 // "Stay"
    #KERBALISMLITE_Monitor_tooltip = \n<i>(中键点击弹出窗口,再次中键点击关闭弹出窗口)</i> // "\n<i>(middle-click to popout in a window, middle-click again to close popout)</i>"
    #KERBALISMLITE_Monitor_INFO = 信息 // "INFO"
    #KERBALISMLITE_Monitor_INFO_desc = 遥测读数 // "Telemetry readings"
    #KERBALISMLITE_Monitor_DATA = 数据 // "DATA"
    #KERBALISMLITE_Monitor_DATA_desc = 存储的文件和样本 // "Stored files and samples"
    #KERBALISMLITE_Monitor_AUTO = 自动 // "AUTO"
    #KERBALISMLITE_Monitor_AUTO_desc = 控制和部件自动化 // "Control and automate components"
    #KERBALISMLITE_Monitor_FAILURES = 故障 // "FAILURES"
    #KERBALISMLITE_Monitor_FAILURES_desc = 查看故障和维护状态 // "See failures and maintenance state"
    #KERBALISMLITE_Monitor_LOG = 日志 // "LOG"
    #KERBALISMLITE_Monitor_LOG_desc = 查看之前的记录 // "See previous notifications"
    #KERBALISMLITE_Monitor_CFG = 配置 // "CFG"
    #KERBALISMLITE_Monitor_CFG_desc = 配置载具 // "Configure the vessel"
    #KERBALISMLITE_Monitor_Inshadow = 星球暗面 // "In shadow"
    #KERBALISMLITE_Monitor_Greenhouse = 温室: // "Greenhouse:"
    #KERBALISMLITE_Monitor_ExposedRadiation1 = 受到极端辐射 // "Exposed to extreme radiation"
    #KERBALISMLITE_Monitor_ExposedRadiation2 = 受到强烈辐射 // "Exposed to intense radiation"
    #KERBALISMLITE_Monitor_ExposedRadiation3 = 受到中度辐射 // "Exposed to moderate radiation"
    #KERBALISMLITE_Monitor_CO2level = 内部大气中的二氧化碳含量: // "CO2 level in internal atmosphere:"
    #KERBALISMLITE_Monitor_ejectionincoming = 日冕物质抛射来袭 // "Coronal mass ejection incoming"
    #KERBALISMLITE_Monitor_TimetoimpactCoronalmass = 袭击时间: // "Time to impact:"
    #KERBALISMLITE_Monitor_Solarstorminprogress = 太阳风暴进行中 // "Solar storm in progress"
    #KERBALISMLITE_Monitor_SolarstormRemaining = 剩余时间: // "Remaining duration:"
    #KERBALISMLITE_Monitor_name = 名称 // "name"
    #KERBALISMLITE_Monitor_level = 等级 // "level"
    #KERBALISMLITE_Monitor_duration = 持续时间 // "duration"
    #KERBALISMLITE_Monitor_depleted = 耗尽 // "depleted"
    #KERBALISMLITE_Monitor_Malfunctions = 故障 // "Malfunctions"
    #KERBALISMLITE_Monitor_Criticalfailures = 严重故障 // "Critical failures"
    #KERBALISMLITE_Monitor_Hidden_Vessels = 隐藏载具 // "Hidden vessels"
    //
    // Telemetry/Planner UI : Signal
    //
    #KERBALISMLITE_UI_signallost = 信号丢失从 // "Signal lost with"
    #KERBALISMLITE_UI_signalback = 信号已连接 // "signal is back"
    #KERBALISMLITE_UI_relayby = 中继从 // "Relayed by"
    #KERBALISMLITE_UI_directlink = 我们与航天中心直联 // "We got a direct link with the space center"
    #KERBALISMLITE_UI_noctrl = 远程控制禁用 // "Remote control disabled"
    #KERBALISMLITE_UI_limitedcontrol = 部分控制 // "Limited control available"
    #KERBALISMLITE_UI_telemetry = 遥测 // "telemetry"
    #KERBALISMLITE_UI_DSNconnected = DSN已连接 // "DSN connected"
    #KERBALISMLITE_UI_sciencerate = 科学研究速率 // "science rate"
    #KERBALISMLITE_UI_strength = 强度 // "strength"
    #KERBALISMLITE_UI_target = 目标 // "target"
    #KERBALISMLITE_UI_transmitting = 传输中 // "transmitting"
    #KERBALISMLITE_UI_Signalrelayed = 信号中继 // "Signal relayed"
    #KERBALISMLITE_UI_Plasmablackout = 黑障 // "Plasma blackout"
    #KERBALISMLITE_UI_Stormblackout = 太阳耀斑 // "Storm blackout"
    #KERBALISMLITE_UI_transmissiondisabled = 数据传输已禁用 // "Data transmission disabled"
    //
    // Telemetry/Planner UI : Automation
    //
    #KERBALISMLITE_UI_devman = 设备管理 // "DEV MANAGER"
    #KERBALISMLITE_UI_devices = 设备 // "DEVICES"
    #KERBALISMLITE_UI_dontcare = 忽略 // "don't care"
    #KERBALISMLITE_UI_scriptvessel = 指令已执行——在飞船 // "Script called on vessel"
    #KERBALISMLITE_DevManager_VESSELDEVICES = 载具设备 // "VESSEL DEVICES"
    #KERBALISMLITE_DevManager_MODULEDEVICES = 模块设备 // "MODULE DEVICES"
    #KERBALISMLITE_DevManager_nodevices = 无设备 // "no devices"
    #KERBALISMLITE_DevManager_TabManual = <i>载具部件直接控制</i> // "<i>Control vessel components directly</i>"
    #KERBALISMLITE_DevManager_TabLanded = <i>着陆时执行</i> // "<i>Called on landing</i>"
    #KERBALISMLITE_DevManager_TabAtmo = <i>进入大气时执行</i> // "<i>Called on entering atmosphere</i>"
    #KERBALISMLITE_DevManager_TabSpace = <i>进入太空时执行</i> // "<i>Called on reaching space</i>"
    #KERBALISMLITE_DevManager_TabSunlight = <i>太阳可见时执行</i> // "<i>Called when sun became visible</i>"
    #KERBALISMLITE_DevManager_TabShadow = <i>太阳不可见时执行</i> // "<i>Called when sun became occluded</i>"
    #KERBALISMLITE_DevManager_TabPowerHigh = <i>当电量高于80%时执行</i> // "<i>Called when EC level goes above 80%</i>"
    #KERBALISMLITE_DevManager_TabPowerLow = <i>当电量小于20%时执行</i> // "<i>Called when EC level goes below 20%</i>"
    #KERBALISMLITE_DevManager_TabRadHigh = <i>当辐射值高于0.05 rad/h时执行</i> // "<i>Called when radiation exceed 0.05 rad/h</i>"
    #KERBALISMLITE_DevManager_TabRadLow = <i>当辐射值低于0.02 rad/h时执行</i> // "<i>Called when radiation goes below 0.02 rad/h</i>"
    #KERBALISMLITE_DevManager_TabLinked = <i>信号恢复时执行</i> // "<i>Called when signal is regained</i>"
    #KERBALISMLITE_DevManager_TabUnlinked = <i>信号丢失时执行</i> // "<i>Called when signal is lost</i>"
    #KERBALISMLITE_DevManager_TabEVAOut = <i>乘员出舱EVA时执行</i> // "<i>Called when going out on EVA</i>"
    #KERBALISMLITE_DevManager_TabEVAIn = <i>乘员返回EVA时执行</i> // "<i>Called when returning from EVA</i>"
    #KERBALISMLITE_DevManager_TabAct1 = <i>按下键盘上的<b>1</b>时执行</i> // "<i>Called by pressing <b>1</b> on the keyboard</i>"
    #KERBALISMLITE_DevManager_TabAct2 = <i>按下键盘上的<b>2</b>时执行</i> // "<i>Called by pressing <b>2</b> on the keyboard</i>"
    #KERBALISMLITE_DevManager_TabAct3 = <i>按下键盘上的<b>3</b>时执行</i> // "<i>Called by pressing <b>3</b> on the keyboard</i>"
    #KERBALISMLITE_DevManager_TabAct4 = <i>按下键盘上的<b>4</b>时执行</i> // "<i>Called by pressing <b>4</b> on the keyboard</i>"
    #KERBALISMLITE_DevManager_TabAct5 = <i>按下键盘上的<b>5</b>时执行</i> // "<i>Called by pressing <b>5</b> on the keyboard</i>"
    #KERBALISMLITE_DevManager_TabDriveFull = <i>数据空闲磁盘空间低于10%时执行</i> // "<i>Called when data free space is below 10%</i>"
    #KERBALISMLITE_DevManager_TabDriveEmpty = <i>数据空闲磁盘空间高于85%时执行</i> // "<i>Called when data free space is above 85%</i>"
    #KERBALISMLITE_DevManager_NameTabLanded = 着陆 // "landed"
    #KERBALISMLITE_DevManager_NameTabAtmo = 大气 // "atmo"
    #KERBALISMLITE_DevManager_NameTabSpace = 太空 // "space"
    #KERBALISMLITE_DevManager_NameTabSunlight = 光照 // "sunlight"
    #KERBALISMLITE_DevManager_NameTabShadow = 阴影 // "shadow"
    #KERBALISMLITE_DevManager_NameTabPowerHigh = 电量高 // "power high"
    #KERBALISMLITE_DevManager_NameTabPowerLow = 电量低 // "power low"
    #KERBALISMLITE_DevManager_NameTabRadHigh = 辐射高 // "rad high"
    #KERBALISMLITE_DevManager_NameTabRadLow = 辐射低 // "rad low"
    #KERBALISMLITE_DevManager_NameTabLinked = 建立连接 // "linked"
    #KERBALISMLITE_DevManager_NameTabUnlinked = 失去连接 // "unlinked"
    #KERBALISMLITE_DevManager_NameTabEVAOut = 出舱 // "EVA out"
    #KERBALISMLITE_DevManager_NameTabEVAIn = 进舱 // "EVA in"
    #KERBALISMLITE_DevManager_NameTabAct1 = 动作1 // "action 1"
    #KERBALISMLITE_DevManager_NameTabAct2 = 动作2 // "action 2"
    #KERBALISMLITE_DevManager_NameTabAct3 = 动作3 // "action 3"
    #KERBALISMLITE_DevManager_NameTabAct4 = 动作4 // "action 4"
    #KERBALISMLITE_DevManager_NameTabAct5 = 动作5 // "action 5"
    #KERBALISMLITE_DevManager_NameTabDriveFull = 磁盘满 // "drive full"
    #KERBALISMLITE_DevManager_NameTabDriveEmpty = 磁盘空 // "drive empty"
    //
    // Telemetry/Planner UI : Comfort
    //
    #KERBALISMLITE_Comfort_firmground = 在陆 // "firm ground"
    #KERBALISMLITE_Comfort_exercise = 锻炼器具 // "exercise"
    #KERBALISMLITE_Comfort_notalone = 同伴 // "not alone"
    #KERBALISMLITE_Comfort_callhome = 建立连接 // "call home"
    #KERBALISMLITE_Comfort_panorama = 全景 // "panorama"
    #KERBALISMLITE_Comfort_factor = 舒适度 // "factor"
    #KERBALISMLITE_Comfort_plants = 盆景 // "plants"
    #KERBALISMLITE_Configure_noconfigure = 无法重新配置组件 // "Can't reconfigure the component"
    #KERBALISMLITE_Configure_dumpexcess = 重新配置将转储超出容量的资源. // "Reconfiguring will dump resources in excess of capacity."
    #KERBALISMLITE_Science_ofdatatransfer = 数据转移 // "of data transfered"
    #KERBALISMLITE_Science_inoperable = 这个实验现在无法操作，重置需要一个 <b>科学家</b> // "The experiment is now inoperable, resetting will require a <b>Scientist</b>"
    //
    // Telemetry/Planner UI : CONNECTION MANAGER
    //
    #KERBALISMLITE_ConnManager_title = 连接管理 // "CONNECTION MANAGER"
    #KERBALISMLITE_ConnManager_CONTROLPATH = 控制通路 // "CONTROL PATH"
    #KERBALISMLITE_ConnManager_noconnection = 无连接 // "no connection"
    //
    // Telemetry/Planner UI : reliability / quality
    //
    #KERBALISMLITE_QualityManagement_title = 质量管理 // "Quality Management"
    #KERBALISMLITE_QualityManagement_noqualityinfo = 没有质量信息 // "no quality info"
    #KERBALISMLITE_QualityManagement_Misc = 杂项 // "Misc"
    #KERBALISMLITE_QualityManagement_busted = 爆裂 // "busted"
    #KERBALISMLITE_QualityManagement_needsrepair = 需要修理 // "needs repair"
    #KERBALISMLITE_QualityManagement_needsservice = 需要维护 // "needs service"
    #KERBALISMLITE_QualityManagement_operationduration = 作业时间 // "operation duration"
    #KERBALISMLITE_QualityManagement_ignitionlimit = 点火限制 // "ignition limit"
    #KERBALISMLITE_QualityManagement_good = 良好 // "good"
    //
    // Monitor UI : file manager
    //
    #KERBALISMLITE_FILEMANAGER_DataAvailable = (<<1>> 可用) // "(<<1>> available)"
    #KERBALISMLITE_FILEMANAGER_SAMPLESMass = 样本 <<1>> // "SAMPLES <<1>>"
    #KERBALISMLITE_FILEMANAGER_TransmittingRate = 以<<1>>速率传输 // "Transmitting at <<1>>"
    #KERBALISMLITE_FILEMANAGER_DeleteConfirm = 您真的要删除<<1>>吗? // "Do you really want to delete <<1>>?"
    #KERBALISMLITE_FILEMANAGER_DumpConfirm = 您真的要丢弃<<1>>吗? // "Do you really want to dump <<1>>?"
    #KERBALISMLITE_FILEMANAGER_title = 文件管理 // "FILE MANAGER"
    #KERBALISMLITE_FILEMANAGER_DataCapacity = 数据 // "DATA"
    #KERBALISMLITE_FILEMANAGER_nofiles = 无文件 // "no files"
    #KERBALISMLITE_FILEMANAGER_SAMPLESAvailable = 可用 // "available"
    #KERBALISMLITE_FILEMANAGER_nosamples = 无样本 // "no samples"
    #KERBALISMLITE_FILEMANAGER_Transmitduration = 传输时间 : // "Transmit duration :"
    #KERBALISMLITE_FILEMANAGER_send = 标记要传输到<b>DSN</b>的文件 // "Flag the file for transmission to <b>DSN</b>"
    #KERBALISMLITE_FILEMANAGER_Delete = 删除该文件 // "Delete the file"
    #KERBALISMLITE_FILEMANAGER_Warning_title = 警告! // "Warning!"
    #KERBALISMLITE_FILEMANAGER_DeleteConfirm_button1 = 删除 // "Delete it"
    #KERBALISMLITE_FILEMANAGER_DeleteConfirm_button2 = 保留 // "Keep it"
    #KERBALISMLITE_FILEMANAGER_analysis = 标记要在<b>实验室</b>中分析的文件 // "Flag the file for analysis in a <b>laboratory</b>"
    #KERBALISMLITE_FILEMANAGER_Dumpsample = 丢弃该样本 // "Dump the sample"
    #KERBALISMLITE_FILEMANAGER_DumpConfirm_button1 = 丢弃 // "Dump it"
    #KERBALISMLITE_FILEMANAGER_DumpConfirm_button2 = 保留 // "Keep it"
    //
    // Messages
    //
    #KERBALISMLITE_Message_RELAX = 放松 // "RELAX"
    #KERBALISMLITE_Message_WARNING = 警告 // "WARNING"
    #KERBALISMLITE_Message_DANGER = 危险 // "DANGER"
    #KERBALISMLITE_Message_FATALITY = 死亡 // "FATALITY"
    #KERBALISMLITE_Message_BREAKDOWN = 崩溃 // "BREAKDOWN"
    //
    // Monitor : main telemetry panel UI
    //
    #KERBALISMLITE_TELEMETRY_title = 遥测 // "TELEMETRY"
    #KERBALISMLITE_TELEMETRY_EVASUIT = 宇航服 // "EVA SUIT"
    #KERBALISMLITE_TELEMETRY_ENVIRONMENT = 环境 // "ENVIRONMENT"
    #KERBALISMLITE_TELEMETRY_SolarPanelsAverageExposure = 太阳能电池板平均照射量 // "solar panels average exposure"
    #KERBALISMLITE_TELEMETRY_Exposureignoringbodiesocclusion = 照射忽视天体遮挡 // "Exposure ignoring bodies occlusion"
    #KERBALISMLITE_TELEMETRY_Exposureignoringbodiesocclusion_desc = 不会改变未载入的载具\n在切换之前一定要优化它 // "Won't change on unloaded vessels\nMake sure to optimize it before switching"
    #KERBALISMLITE_TELEMETRY_nosensorsinstalled = 没有安装传感器 // "no sensors installed"
    #KERBALISMLITE_TELEMETRY_HABITAT = 生境 // "HABITAT"
    #KERBALISMLITE_TELEMETRY_co2level = Co2浓度 // "co2 level"
    #KERBALISMLITE_TELEMETRY_radiation = 辐射 // "radiation"
    #KERBALISMLITE_TELEMETRY_pressure = 压力 // "pressure"
    #KERBALISMLITE_TELEMETRY_shielding = 防护 // "shielding"
    #KERBALISMLITE_TELEMETRY_livingspace = 居住面积 // "living space"
    #KERBALISMLITE_TELEMETRY_comfort = 舒适度 // "comfort"
    #KERBALISMLITE_TELEMETRY_EVAsavailable = EVA可用 // "EVA's available"
    #KERBALISMLITE_TELEMETRY_EnvBreathable = 无限 // "infinite"
    #KERBALISMLITE_TELEMETRY_Breathableatm = 可供呼吸的空气 // "breathable atmosphere"
    #KERBALISMLITE_TELEMETRY_approx = 约(来源于储存的N2氮气) // "approx (derived from stored N2)"
    #KERBALISMLITE_TELEMETRY_TRANSMISSION = 传输 // "TRANSMISSION"
    #KERBALISMLITE_TELEMETRY_TRANSMISSION_rate = 速率 // "rate"
    #KERBALISMLITE_TELEMETRY_filetransmitted = 文件已传输 // "file transmitted"
    #KERBALISMLITE_TELEMETRY_transmitting = 传输中 // "transmitting"
    #KERBALISMLITE_TELEMETRY_maxtransmissionrate = 最大传输速率 // "max transmission rate"
    #KERBALISMLITE_TELEMETRY_target = 目标 // "target"
    #KERBALISMLITE_TELEMETRY_totalsciencetransmitted = 总传输科学点数 // "total science transmitted"
    #KERBALISMLITE_TELEMETRY_SUPPLIES = 资源 // "SUPPLIES"
    #KERBALISMLITE_TELEMETRY_nochange = 无变化 // "no change"
    #KERBALISMLITE_TELEMETRY_empty = (空) // "(empty)"
    #KERBALISMLITE_TELEMETRY_full = (满) // "(full)"
    #KERBALISMLITE_TELEMETRY_VITALS = 乘员体征 // "VITALS"
    #KERBALISMLITE_TELEMETRY_HYBERNATED = 冬眠 // "HYBERNATED"
    #KERBALISMLITE_TELEMETRY_GREENHOUSE = 温室 // "GREENHOUSE"
    #KERBALISMLITE_TELEMETRY_readytoharvest = 可收获 // "ready to harvest"
    #KERBALISMLITE_TELEMETRY_growing = 生长中 // "growing"
    #KERBALISMLITE_TELEMETRY_timetoharvest = 收获时间 // "time to harvest"
    #KERBALISMLITE_TELEMETRY_growth = 生长 // "growth"
    #KERBALISMLITE_TELEMETRY_naturallighting = 自然照明 // "natural lighting"
    #KERBALISMLITE_TELEMETRY_artificiallighting = 人工照明 // "artificial lighting"
    #KERBALISMLITE_TELEMETRY_crop = 作物 // "crop"
    #KERBALISMLITE_TimeoutMsg1 = 连接进行中 // "Connection in progress"
    #KERBALISMLITE_TimeoutMsg2 = 连接超时 // "Connection timed-out"
    #KERBALISMLITE_TimeoutMsg3 = 尝试连接在<<1>> // "New tentative in <<1>> (s)"
    //
    // Monitor : vessel config UI
    //
    #KERBALISMLITE_VESSELCONFIG_title = 载具配置 // "VESSEL CONFIG"
    #KERBALISMLITE_VESSELCONFIG_RENDERING = 高亮 // "RENDERING"
    #KERBALISMLITE_VESSELCONFIG_Highlightfailed = 故障高亮 // "highlight malfunctions"
    #KERBALISMLITE_VESSELCONFIG_Highlightfailed_desc = 高亮故障部件 // "Highlight failed components"
    #KERBALISMLITE_VESSELCONFIG_MESSAGES = 信息 // "MESSAGES"
    #KERBALISMLITE_VESSELCONFIG_EClow = 接收消息当\n电力级别为低 // "Receive a message when\nElectricCharge level is low"
    #KERBALISMLITE_VESSELCONFIG_battery = 电池 // "battery"
    #KERBALISMLITE_VESSELCONFIG_Supplylow = 接收消息当\n物资级别为低 // "Receive a message when\nsupply resources level is low"
    #KERBALISMLITE_VESSELCONFIG_supply = 物资 // "supply"
    #KERBALISMLITE_VESSELCONFIG_Signallost = 接收消息当\n信号丢失或连接 // "Receive a message when signal is lost or obtained"
    #KERBALISMLITE_VESSELCONFIG_signal = 信号 // "signal"
    #KERBALISMLITE_VESSELCONFIG_Componentfail = 接收消息当\n存在部件故障 // "Receive a message\nwhen a component fail"
    #KERBALISMLITE_VESSELCONFIG_reliability = 可靠性 // "reliability"
    #KERBALISMLITE_VESSELCONFIG_CMEevent = 接收消息当\n发生日冕物质抛射 // "Receive a message\nduring CME events"
    #KERBALISMLITE_VESSELCONFIG_storm = 太阳风暴 // "storm"
    #KERBALISMLITE_VESSELCONFIG_ScriptExe = 接收消息当\n脚本执行 // "Receive a message when\nscripts are executed"
    #KERBALISMLITE_VESSELCONFIG_script = 脚本 // "script"
    #KERBALISMLITE_VESSELCONFIG_ShowVessel = 显示载具 //"Show vessel"
    #KERBALISMLITE_VESSELCONFIG_ShowVessel_desc = 在载具列表中显示载具 // "Show vessel in vessel list"
    //
    // Science Archive Window
    //
    #KERBALISMLITE_SCIENCEARCHIVE_title = 科研档案 // "SCIENCE ARCHIVE"
    #KERBALISMLITE_SCIENCEARCHIVE_hidearchive = 隐藏科研档案 // "hide science archive"
    #KERBALISMLITE_SCIENCEARCHIVE_EXPERIMENTS = 实验 // "EXPERIMENTS"
    #KERBALISMLITE_SCIENCEARCHIVE_filter1 = 显示已完成 // "filter by researched"
    #KERBALISMLITE_SCIENCEARCHIVE_filter2 = 显示ROCs // "filter ROCs"
    #KERBALISMLITE_SCIENCEARCHIVE_filter3 = 显示当前载具 // "filter by current vessel"
    #KERBALISMLITE_SCIENCEARCHIVE_EXPERIMENTINFO = 实验信息 // "EXPERIMENT INFO"
    #KERBALISMLITE_SCIENCEARCHIVE_STATUS = 状态 // "STATUS"
    #KERBALISMLITE_SCIENCEARCHIVE_onvessel = 载具 : // "on vessel :"
    #KERBALISMLITE_SCIENCEARCHIVE_onpart = 部件 : // "on part :"
    #KERBALISMLITE_SCIENCEARCHIVE_showarchive = 显示科研档案 // "show science archive"
    #KERBALISMLITE_SCIENCEARCHIVE_showexperimentinfo = 显示实验信息 // "show experiment info"
    #KERBALISMLITE_SCIENCEARCHIVE_hideexperimentinfo = 隐藏实验信息 // "hide experiment info"
    #KERBALISMLITE_SCIENCEARCHIVE_closebutton = 关闭 // "close"
    #KERBALISMLITE_SCIENCEARCHIVE_forcedrun = 强制运行 // "forced run"
    #KERBALISMLITE_SCIENCEARCHIVE_forcedrun_desc = 强制运行实验即使\n已经没有实验价值 // "force experiment to run even\nif there is no science value left"
    #KERBALISMLITE_SCIENCEARCHIVE_REQUIREMENTS = 需求 // "REQUIREMENTS"
    #KERBALISMLITE_SCIENCEARCHIVE_state = 状态 // "state"
    #KERBALISMLITE_SCIENCEARCHIVE_status = 情形 // "status"
    #KERBALISMLITE_SCIENCEARCHIVE_collected = 已收集 // "collected"
    #KERBALISMLITE_SCIENCEARCHIVE_samples = 样本 // "samples"
    #KERBALISMLITE_SCIENCEARCHIVE_situation = 情况 // "situation"
    #KERBALISMLITE_SCIENCEARCHIVE_retrieved = 回收 // "retrieved"
    #KERBALISMLITE_SCIENCEARCHIVE_invalidsituation = 无效的环境 // "invalid situation"
    #KERBALISMLITE_SCIENCEARCHIVE_value = 价值 // "value"
    #KERBALISMLITE_SCIENCEARCHIVE_never = 未回收 // "never"
    #KERBALISMLITE_SCIENCEARCHIVE_inRnD = 在研发中心 // "in RnD"
    #KERBALISMLITE_SCIENCEARCHIVE_inflight = 在飞行) // "in flight)"
    #KERBALISMLITE_SCIENCEARCHIVE_stop = 停止 // "stop"
    #KERBALISMLITE_SCIENCEARCHIVE_start = 开始 // "start"
    #KERBALISMLITE_SCIENCEARCHIVE_current = 当前 // "current"
    #KERBALISMLITE_SCIENCEARCHIVE_Showonlyknownsubjects = 只显示已知研究 // "Show only known subjects"
    #KERBALISMLITE_SCIENCEARCHIVE_RnD = R&D // "RnD"
    #KERBALISMLITE_SCIENCEARCHIVE_RnD_desc = 在研发中心回收\n的科学点数 // "Science points\nretrieved in RnD"
    #KERBALISMLITE_SCIENCEARCHIVE_Flight = 飞行 // "Flight"
    #KERBALISMLITE_SCIENCEARCHIVE_Flight_desc = 在所有载具收集\n的科学点数 // "Science points\ncollected in all vessels"
    #KERBALISMLITE_SCIENCEARCHIVE_Value = 价值 // "Value"
    #KERBALISMLITE_SCIENCEARCHIVE_Value_desc = 剩余的科学点数\n包括在研发中心中回收\n和飞行中收集的数据 // "Remaining science value\naccounting for data retrieved in RnD\nand collected in flight"
    #KERBALISMLITE_SCIENCEARCHIVE_Completed = 已完成 // "Completed"
    #KERBALISMLITE_SCIENCEARCHIVE_Completed_desc = 该项目在研发中心\n被回收的次数 // "How many times the subject\nhas been retrieved in RnD"
    #KERBALISMLITE_SCIENCEARCHIVE_info_Crew = 乘员 // "Crew"
    #KERBALISMLITE_SCIENCEARCHIVE_info_levelReq = 等级为 // "of level"
    #KERBALISMLITE_SCIENCEARCHIVE_info_Req = 可用 // "is required"
    #KERBALISMLITE_SCIENCEARCHIVE_info_no = 不可用 // "no"
    #KERBALISMLITE_SCIENCEARCHIVE_info_anyone = 任何人 // "anyone"
    #KERBALISMLITE_SCIENCEARCHIVE_info_level = 等级: // "level:"
    #KERBALISMLITE_SCIENCEARCHIVE_CREDITS = 点数 // "CREDITS"
    //
    // Module : Emitter
    //
    #KERBALISMLITE_Emitter_Action = 切换护盾开关 // "Toggle Active Shield"
    #KERBALISMLITE_Emitter_EmitIonizing = 释放电离辐射 // "Emit ionizing radiation"
    #KERBALISMLITE_Emitter_ReduceIncoming = 减少入射辐射 // "Reduce incoming radiation"
    #KERBALISMLITE_Emitter_Emitted = 发出辐射 // "Radiation emitted"
    #KERBALISMLITE_Emitter_ActiveShielding = 开启防护 // "Active shielding"
    #KERBALISMLITE_Emitter_none = 无 // "none"
    //
    // Module : Deploy
    //
    #KERBALISMLITE_Deploy_actualCost = 电力使用 // "EC Usage"
    #KERBALISMLITE_Deploy_isBroken = 损毁 // "Is broken"
    //
    // Module : Configure
    //
    #KERBALISMLITE_Module_Configure = 配置 // "Configure"
    #KERBALISMLITE_Module_Configure_Slots = 插槽 // "Slots"
    #KERBALISMLITE_Module_Configure_Reconfigure = 重新配置 // "Reconfigure"
    #KERBALISMLITE_Module_Configure_Setups = 设置: // "Setups:"
    #KERBALISMLITE_Module_Configurable = 可配置 // "Configurable"
    #KERBALISMLITE_Module_Resources = 资源 // "Resources"
    #KERBALISMLITE_Module_Extra = 额外 // "Extra"
    #KERBALISMLITE_Module_mass = 质量 // "mass"
    #KERBALISMLITE_Module_cost = 成本 // "cost"
    //
    // Module : Comfort
    //
    #KERBALISMLITE_Module_Comfort = 舒适度 // "Comfort"
    #KERBALISMLITE_Module_Comfort_Summary1 = 理想 // "ideal"
    #KERBALISMLITE_Module_Comfort_Summary2 = 满意 // "good"
    #KERBALISMLITE_Module_Comfort_Summary3 = 一般 // "modest"
    #KERBALISMLITE_Module_Comfort_Summary4 = 很差 // "poor"
    #KERBALISMLITE_Module_Comfort_Summary5 = 无 // "none"
    //
    // Module : Experiment
    //
    #KERBALISMLITE_Module_Experiment_MultipleRunsMessage = 不能在<<2>>上再次启动<<1>> // "Can't start <<1>> a second time on vessel <<2>>"
    #KERBALISMLITE_Module_Experiment_Prepare = 准备 // "Prepare"
    #KERBALISMLITE_Module_Experiment_Reset = 重置 // "Reset"
    #KERBALISMLITE_Module_Experiment_issue_title = 问题 // "issue"
    #KERBALISMLITE_Module_Experiment_issue1 = 无效的环境 // "invalid situation"
    #KERBALISMLITE_Module_Experiment_issue2 = 遮蔽 // "shrouded"
    #KERBALISMLITE_Module_Experiment_issue3 = 需要重置 // "reset required"
    #KERBALISMLITE_Module_Experiment_issue4 = 没有电力 // "no Electricity"
    #KERBALISMLITE_Module_Experiment_issue5 = 飞船内存在乘员 // "crew on board"
    #KERBALISMLITE_Module_Experiment_issue6 = 耗尽 // "depleted"
    #KERBALISMLITE_Module_Experiment_issue7 = 未准备 // "not prepared"
    #KERBALISMLITE_Module_Experiment_issue8 = 地面飞行 // "background flight"
    #KERBALISMLITE_Module_Experiment_issue9 = 未满足的需求 // "unmet requirement"
    #KERBALISMLITE_Module_Experiment_issue10 = 缺少资源 // "missing resource"
    #KERBALISMLITE_Module_Experiment_issue11 = 没有存储空间 // "no storage space"
    #KERBALISMLITE_Module_Experiment_issue12 = 缺乏 <<1>> // "missing <<1>>"
    #KERBALISMLITE_Module_Experiment_runningstate1 = 停止 // "stopped"
    #KERBALISMLITE_Module_Experiment_runningstate2 = 运行 // "started"
    #KERBALISMLITE_Module_Experiment_runningstate3 = 强制运行 // "forced run"
    #KERBALISMLITE_Module_Experiment_runningstate4 = 损坏 // "broken"
    #KERBALISMLITE_Module_Experiment_runningstate5 = 运行中 // "running"
    #KERBALISMLITE_Module_Experiment_runningstate6 = 等待 // "waiting"
    #KERBALISMLITE_Module_Experiment_ScienceValuenone = 无 // "none"
    #KERBALISMLITE_Module_Experiment_Requires = 需求: // "Requires:"
    #KERBALISMLITE_Module_Experiment_Specifics_info1 = 数据大小 // "Data size"
    #KERBALISMLITE_Module_Experiment_Specifics_info2 = 数据速率 // "Data rate"
    #KERBALISMLITE_Module_Experiment_Specifics_info3 = 持续时间 // "Duration"
    #KERBALISMLITE_Module_Experiment_Specifics_info4 = 样本大小 // "Sample size"
    #KERBALISMLITE_Module_Experiment_Specifics_info5 = 样品质量 // "Sample mass"
    #KERBALISMLITE_Module_Experiment_Specifics_info6 = 样本 // "Samples"
    #KERBALISMLITE_Module_Experiment_Specifics_info7_sample = 持续时间 // "Duration"
    #KERBALISMLITE_Module_Experiment_Specifics_Situations = 情况: // "Situations:"
    #KERBALISMLITE_Module_Experiment_Specifics_info8 = 需要: // "Needs:"
    #KERBALISMLITE_Module_Experiment_Specifics_info9 = 电力 // "EC"
    #KERBALISMLITE_Module_Experiment_Specifics_info10 = 准备 // "Preparation"
    #KERBALISMLITE_Module_Experiment_Specifics_info10_none = 无 // "none"
    #KERBALISMLITE_Module_Experiment_Specifics_info11 = 操作 // "Operation"
    #KERBALISMLITE_Module_Experiment_Specifics_info11_unmanned = 无人 // "unmanned"
    #KERBALISMLITE_Module_Experiment_Specifics_info12 = 重置 // "Reset"
    #KERBALISMLITE_Module_Experiment_Specifics_info12_none = 无 // "none"
    #KERBALISMLITE_Module_Experiment_MultipleRunsMessage_title = 已在运行 // "ALREADY RUNNING"
    #KERBALISMLITE_Module_Experiment_Message1 = 我没有这个资格 // "I'm not qualified for this"
    #KERBALISMLITE_Module_Experiment_Message2 = 我甚至不知道从哪里开始 // "I will not even know where to start"
    #KERBALISMLITE_Module_Experiment_Message3 = 恐怕我做不到 // "I'm afraid I can't do that"
    #KERBALISMLITE_Module_Experiment_Message4 = 准备完成 // "Preparation Complete"
    #KERBALISMLITE_Module_Experiment_Message5 = 准备好了 // "Ready to go"
    #KERBALISMLITE_Module_Experiment_Message6 = 让我们开始做一些科学吧! // "Let's start doing some science!"
    #KERBALISMLITE_Module_Experiment_Message7 = 已重置 // "Reset Done"
    #KERBALISMLITE_Module_Experiment_Message8 = 又可以运行了 // "It's good to go again"
    #KERBALISMLITE_Module_Experiment_Message9 = 准备好进入下一个科学领域 // "Ready for the next bit of science"
    //
    // Module : Greenhouse
    //
    #KERBALISMLITE_Greenhouse_msg_1 = 在<<1>> // "On <<1>> "
    #KERBALISMLITE_Greenhouse_msg_2 = 收获了 <<1>> // "harvest produced <<1>>"
    #KERBALISMLITE_Greenhouse_msg_3 = 紧急收获了 <<1>> // "emergency harvest produced <<1>>"
    #KERBALISMLITE_Greenhouse_resoucesmissing = <<1>>不足 // "missing <<1>>"
    #KERBALISMLITE_Greenhouse = 温室 // "Greenhouse"
    #KERBALISMLITE_Greenhouse_Action = 开启/关闭温室 // "Enable/Disable Greenhouse"
    #KERBALISMLITE_Greenhouse_EmergencyHarvest = 紧急收集 // "Emergency Harvest"
    #KERBALISMLITE_Greenhouse_Harvest = 收获 // "Harvest"
    #KERBALISMLITE_Greenhouse_status_artificial = 人工照明 // "Artificial lighting"
    #KERBALISMLITE_Greenhouse_status_natural = 自然照明 // "Natural lighting"
    #KERBALISMLITE_Greenhouse_status_tta = 可以收获 // "Time to harvest"
    #KERBALISMLITE_Greenhouse_Greenhouse = 温室 // "Greenhouse"
    #KERBALISMLITE_Greenhouse_desc = 在太空中和天体表面种植作物，即使远离太阳. // "Grow crops in space and on the surface of celestial bodies, even far from the sun."
    #KERBALISMLITE_Greenhouse_disabled = 关闭 // "disabled"
    #KERBALISMLITE_Greenhouse_enabled = 开启 // "enabled"
    #KERBALISMLITE_Greenhouse_issue1 = 照明不足 // "insufficient lighting"
    #KERBALISMLITE_Greenhouse_issue2 = 气压不足 // "insufficient pressure"
    #KERBALISMLITE_Greenhouse_issue3 = 过度辐射 // "excessive radiation"
    #KERBALISMLITE_Greenhouse_info1 = 收获量 // "Harvest size"
    #KERBALISMLITE_Greenhouse_info2 = 收获时间 // "Harvest time"
    #KERBALISMLITE_Greenhouse_info3 = 耐光性 // "Lighting tolerance"
    #KERBALISMLITE_Greenhouse_info4 = 压力容限 // "Pressure tolerance"
    #KERBALISMLITE_Greenhouse_info5 = 辐射耐受 // "Radiation tolerance"
    #KERBALISMLITE_Greenhouse_info6 = 灯光电力使用 // "Lamps EC rate"
    #KERBALISMLITE_Greenhouse_info7 = 资源需求 // "Required resources"
    #KERBALISMLITE_Greenhouse_CarbonDioxide = 二氧化碳 // "CarbonDioxide"
    #KERBALISMLITE_Greenhouse_CarbonDioxide_desc = 农作物也可以在不使用废气处理装置的情况下利用大气中的二氧化碳。 // "Crops can also use the CO2 in the atmosphere without a scrubber."
    #KERBALISMLITE_Greenhouse_Byproducts = 副产品 // "By-products"
    //
    // Module : Habitat
    //
    #KERBALISMLITE_Habitat_postmsg = 当有乘员在内时不能关闭<b><<1>> 环境</b> // "Can't disable <b><<1>> habitat</b> while crew is inside"
    #KERBALISMLITE_Habitat = 生活环境 // "Habitat"
    #KERBALISMLITE_Habitat_Action = 开启/关闭栖息地 // "Enable/Disable Habitat"
    #KERBALISMLITE_Habitat_Surface = 表面积 // "Surface"
    #KERBALISMLITE_Habitat_Volume = 体积 // "Volume"
    #KERBALISMLITE_Habitat_pressurizing = 加压中... // "pressurizing..."
    #KERBALISMLITE_Habitat_depressurizing = 降压中... // "depressurizing..."
    #KERBALISMLITE_Habitat_inflating = 充气中... // "inflating..."
    #KERBALISMLITE_Habitat_deflating = 放气中... // "deflating..."
    #KERBALISMLITE_Habitat_info1 = 体积 // "Volume"
    #KERBALISMLITE_Habitat_info2 = 表面积 // "Surface"
    #KERBALISMLITE_Habitat_info3 = 加压 // "Pressurized"
    #KERBALISMLITE_Habitat_yes = 是 // "yes"
    #KERBALISMLITE_Habitat_no = 否 // "no"
    #KERBALISMLITE_Habitat_none = 无 // "none"
    #KERBALISMLITE_Habitat_info4 = 可展开 // "Inflatable"
    #KERBALISMLITE_Habitat_info5 = 乘员附加质量 // "Added mass per crew"
    #KERBALISMLITE_Habitat_Summary1 = 理想 // "ideal"
    #KERBALISMLITE_Habitat_Summary2 = 满意 // "good"
    #KERBALISMLITE_Habitat_Summary3 = 一般 // "modest"
    #KERBALISMLITE_Habitat_Summary4 = 很差 // "poor"
    #KERBALISMLITE_Habitat_Summary5 = 拥挤 // "cramped"
    //
    // Module : HardDrive
    //
    #KERBALISMLITE_HardDrive = 硬盘 // "Hard Drive"
    #KERBALISMLITE_HardDrive_StoreData = 存储数据 // "Store data"
    #KERBALISMLITE_HardDrive_TakeData = 取出数据 // "Take data"
    #KERBALISMLITE_HardDrive_TransferData = 存放数据在此 // "Transfer data here"
    #KERBALISMLITE_HardDrive_DataCapacity = 数据容量 // "Data Capacity"
    #KERBALISMLITE_HardDrive_SampleCapacity = 样品容量 // "Sample Capacity"
    #KERBALISMLITE_HardDrive_Capacity = 容量 // "Capacity"
    #KERBALISMLITE_HardDrive_Data = 数据 // "Data"
    #KERBALISMLITE_HardDrive_Dataempty = 空 // "empty"
    #KERBALISMLITE_HardDrive_WARNING_title = 警告：未复制所有内容 // "WARNING: not evering copied"
    #KERBALISMLITE_HardDrive_WARNING = 内容已经存储在容器里 // "Storage is at capacity"
    #KERBALISMLITE_HardDrive_info1 = 文件容量 // "File capacity"
    #KERBALISMLITE_HardDrive_info2 = 样本容量 // "Sample capacity"
    #KERBALISMLITE_HardDrive_Capacityunlimited = 无限 // "unlimited"
    //
    // Module : GravityRing
    //
    #KERBALISMLITE_GravityRing_Action = 展开/收回 // "Deploy/Retract Ring"
    #KERBALISMLITE_GravityRing_Toggle = 展开 // "Deploy"
    #KERBALISMLITE_GravityRing_yes = 是 // "yes"
    #KERBALISMLITE_GravityRing_no = 否 // "no"
    #KERBALISMLITE_GravityRing_info1 = 好处 // "bonus"
    #KERBALISMLITE_GravityRing_info2 = 可展开 // "deployable"
    //
    // Module : Harvester
    //
    #KERBALISMLITE_Harvester_generatedescription = 从<<2>>中提取<<1>> // "Extract <<1>> from <<2>>"
    #KERBALISMLITE_Harvester_Action = 启动/停止收集 // "Start/Stop Harvester"
    #KERBALISMLITE_Harvester_running = 运行 // "running"
    #KERBALISMLITE_Harvester_stopped = 停止 // "stopped"
    #KERBALISMLITE_Harvester_none = 无 // "none"
    #KERBALISMLITE_Harvester_land_valid = 没有触地 // "no ground contact"
    #KERBALISMLITE_Harvester_ocean_valid = 不在海洋 // "not in ocean"
    #KERBALISMLITE_Harvester_atmo_valid = 不在大气 // "not in atmosphere"
    #KERBALISMLITE_Harvester_space_valid = 不在太空 // "not in space"
    #KERBALISMLITE_Harvester_pressurebelow = 压力低于阈值 // "pressure below threshold"
    #KERBALISMLITE_Harvester_abundancebelow = 丰度低于阈值 // "abundance below threshold"
    #KERBALISMLITE_Harvester_simulatedabundance = 在此丰度模拟 // "Simulate at abundance"
    #KERBALISMLITE_Harvester_source1 = 地面 // "the surface"
    #KERBALISMLITE_Harvester_source2 = 海洋 // "the ocean"
    #KERBALISMLITE_Harvester_source3 = 大气 // "the atmosphere"
    #KERBALISMLITE_Harvester_source4 = 太空 // "space"
    #KERBALISMLITE_Harvester_info1 = 类型 // "type"
    #KERBALISMLITE_Harvester_info2 = 资源 // "resource"
    #KERBALISMLITE_Harvester_info3 = 最小丰度 // "min abundance"
    #KERBALISMLITE_Harvester_info4 = 最小压力 // "min pressure"
    #KERBALISMLITE_Harvester_info5 = 提取速度 // "extraction rate"
    #KERBALISMLITE_Harvester_info6 = 在丰度 // "at abundance"
    #KERBALISMLITE_Harvester_info7 = 电力消耗 // "ec consumption"
    //
    // Module : ScanSat
    //
    #KERBALISMLITE_Scansat_Scannerhalted_text = 扫描仪在<<1>>处停止.飞船上没有储存空间 // "Scanner halted on <<1>>. No storage left on vessel."
    #KERBALISMLITE_Scansat_sensorresumed = SCANsat传感器在<<1>>上恢复工作 // "SCANsat sensor resumed operations on <<1>>"
    #KERBALISMLITE_Scansat_sensordisabled = SCANsat传感器在<<1>>上被禁用 // "SCANsat sensor was disabled on <<1>>"
    #KERBALISMLITE_Scansat_Scannerhalted = 扫描器停止 // "Scanner halted"
    //
    // Module : Laboratory
    //
    #KERBALISMLITE_Laboratory_Analyzed = 我们的实验室在<<1>>上研究<<2>>完成 // "Our laboratory on <<1>> analyzed <<2>>"
    #KERBALISMLITE_Laboratory_Title = 实验室 // "Laboratory"
    #KERBALISMLITE_Laboratory_Toggle = 实验 // "Toggle Lab"
    #KERBALISMLITE_Laboratory_Clean = 重置实验 // "Clean Lab"
    #KERBALISMLITE_Laboratory_stopped = 停止 // "stopped"
    #KERBALISMLITE_Laboratory_Notspace = 硬盘空间不够 // "Not enough space on hard drive"
    #KERBALISMLITE_Laboratory_Action = 开启/关闭 实验 // "Enable/Disable Lab"
    #KERBALISMLITE_Laboratory_NoEC = 缺少电力 // "no electric charge"
    #KERBALISMLITE_Laboratory_NoSample = 缺少样本分析 // "no samples to analyze"
    #KERBALISMLITE_Laboratory_Cleaned = 实验容器已经重置. // "Vessel experiments have been cleaned."
    #KERBALISMLITE_Laboratory_Specs = 分析样本以产生可传输的数据. // "Analyze samples to produce transmissible data"
    #KERBALISMLITE_Laboratory_Researcher = 科学家 // "Researcher"
    #KERBALISMLITE_Laboratory_CanClean = 可以重置实验 // "Can clean experiments"
    #KERBALISMLITE_Laboratory_ECrate = 电量充放率 // "EC rate"
    #KERBALISMLITE_Laboratory_rate = 分析速率 // "Analysis rate"
    #KERBALISMLITE_Laboratory_Analysis = 研究完成 // "ANALYSIS COMPLETED"
    #KERBALISMLITE_Laboratory_Results = 研究结果可以传输 // "The results can be transmitted now"
    #KERBALISMLITE_Laboratory_Nostorage = 没有可用的存储空间 // "No storage available"
    //
    // Module : PassiveShield
    //
    #KERBALISMLITE_PassiveShield_Sandbags = 沙袋 // "Sandbags"
    #KERBALISMLITE_PassiveShield_fill = 满 // "fill"
    #KERBALISMLITE_PassiveShield_empty = 空 // "empty"
    #KERBALISMLITE_PassiveShield_stowed = 装填 // "stowed"
    #KERBALISMLITE_PassiveShield_absorbing = 吸收 // "absorbing"
    #KERBALISMLITE_PassiveShield_MessagePost = 我不知道这是怎么回事! // "I don't know how this works!"
    //
    // Module : PlannerController
    //
    #KERBALISMLITE_PlannerController_yes = 是 // "yes"
    #KERBALISMLITE_PlannerController_no = 否 // "no"
    //
    // Module : ProcessController
    //
    #KERBALISMLITE_ProcessController_Start_Stop = 开始/停止 // "Start/Stop"
    #KERBALISMLITE_ProcessController_broken = 损坏 // "broken"
    #KERBALISMLITE_ProcessController_running = 运行 // "running"
    #KERBALISMLITE_ProcessController_stopped = 停止 // "stopped"
    #KERBALISMLITE_ProcessController_Dump = 丢弃 // "Dump"
    #KERBALISMLITE_ProcessController_info1 = 半衰期 // "Half-life"
    //
    // Module : Reliability
    //
    #KERBALISMLITE_Reliability_Inspect = 检查<<1>> // "Inspect <<1>>"
    #KERBALISMLITE_Reliability_Repair = 修复<<1>> // "Repair <<1>>"
    #KERBALISMLITE_Reliability_Service = 维护 <<1>> // "Service <<1>>"
    #KERBALISMLITE_Reliability_qualityinfo = <<1>>质量规格 // "<<1>> quality"
    #KERBALISMLITE_Reliability_Reliability = 可靠性 // "Reliability"
    #KERBALISMLITE_Reliability_criticalfailure = 严重故障 // "critical failure"
    #KERBALISMLITE_Reliability_malfunction = 故障 // "malfunction"
    #KERBALISMLITE_Reliability_burnremaining = 剩余燃烧时间: // "remaining burn:"
    #KERBALISMLITE_Reliability_ignitions = 点火次数: // "ignitions:"
    #KERBALISMLITE_Reliability_takingradiationdamage = 遭受辐射损害 // "taking radiation damage"
    #KERBALISMLITE_Reliability_qualityhigh = 高规格 // "high"
    #KERBALISMLITE_Reliability_qualitystandard = 标准规格 // "standard"
    #KERBALISMLITE_Reliability_MTBF = MTBF: // "MTBF:                //Mean Time Between Failures(I guess)"
    #KERBALISMLITE_Reliability_Burntime = 燃烧时间: // "Burn time:"
    #KERBALISMLITE_Reliability_MessagePost1 = 这几乎是新的 // "It is practically new"
    #KERBALISMLITE_Reliability_MessagePost2 = 它的状况良好 // "It is in good shape"
    #KERBALISMLITE_Reliability_MessagePost3 = 这将能用好几年 // "This will last for ages"
    #KERBALISMLITE_Reliability_MessagePost4 = 崭新出厂! // "Brand new!"
    #KERBALISMLITE_Reliability_MessagePost5 = 根本看不出来使用过. 这个真的打开过? // "Doesn't look used. Is this even turned on?"
    #KERBALISMLITE_Reliability_MessagePost6 = 看起来很快就要脱掉下来了. // "Looks like it's going to fall off soon."
    #KERBALISMLITE_Reliability_MessagePost7 = 最好赶紧准备好强力胶带! // "Better get the duck tape ready!"
    #KERBALISMLITE_Reliability_MessagePost8 = 它快达到它的使用年限了. // "It is reaching its operational limits."
    #KERBALISMLITE_Reliability_MessagePost9 = 这怎么还能运作? // "How is this still working?"
    #KERBALISMLITE_Reliability_MessagePost10 = 它现在随时都有可能坏掉. // "It could fail at any moment now."
    #KERBALISMLITE_Reliability_MessagePost11 = 我没有这个资格 // "I'm not qualified for this"
    #KERBALISMLITE_Reliability_MessagePost12 = 我甚至不知道从哪里开始 // "I will not even know where to start"
    #KERBALISMLITE_Reliability_MessagePost13 = 恐怕我做不到 // "I'm afraid I can't do that"
    #KERBALISMLITE_Reliability_MessagePost14 = <<1>> 已修复 // "<<1>> repaired"
    #KERBALISMLITE_Reliability_MessagePost15 = 给了它一脚后又能用了. // "A powerkick did the trick."
    #KERBALISMLITE_Reliability_MessagePost16 = 有什么东西是强力胶带修不好的吗? // "Duct tape, is there something it can't fix?"
    #KERBALISMLITE_Reliability_MessagePost17 = 再次全面运作. // "Fully operational again."
    #KERBALISMLITE_Reliability_MessagePost18 = 我们回到正轨了. // "We are back in business."
    #KERBALISMLITE_Reliability_MessagePost19 = <<1>> 维护完成 // "<<1>> serviced"
    #KERBALISMLITE_Reliability_MessagePost20 = 我不知道这个为什么现在还能用. // "I don't know how this was still working."
    #KERBALISMLITE_Reliability_MessagePost21 = 拧紧那个松动的螺丝. // "Fastened that loose screw."
    #KERBALISMLITE_Reliability_MessagePost22 = 有人把牙签落在那里了. // "Someone forgot a toothpick in there."
    #KERBALISMLITE_Reliability_MessagePost23 = 完好如初! // "As good as new!"
    #KERBALISMLITE_Reliability_MessagePost24 = 在<<2>>上的<<1>>发生故障 // "<<1>> malfunctioned on <<2>>"
    #KERBALISMLITE_Reliability_MessagePost25 = 我们还能修好它 // "We can still repair it"
    #KERBALISMLITE_Reliability_MessagePost26 = 在<<2>>上的<<1>>失效了 // "<<1>> failed on <<2>>"
    #KERBALISMLITE_Reliability_MessagePost27 = 它再也不能用了 // "It is gone for good"
    #KERBALISMLITE_Reliability_MessagePost28 = 在<<2>>上的<<1>>发生了一点问题 // "There has been a problem with <<1>> on <<2>>"
    #KERBALISMLITE_Reliability_MessagePost29 = 这一次，我们能够远程修复它 // "We were able to fix it remotely, this time"
    #KERBALISMLITE_Reliability_info1 = 冗余 // "Redundancy"
    #KERBALISMLITE_Reliability_info2 = 修复 // "Repair"
    #KERBALISMLITE_Reliability_info3 = 标准规格 // "Standard quality"
    #KERBALISMLITE_Reliability_info4 = MTBF // "MTBF"
    #KERBALISMLITE_Reliability_info5 = 点火故障 // "Ignition failures"
    #KERBALISMLITE_Reliability_info6 = 额定燃烧时间 // "Rated burn duration"
    #KERBALISMLITE_Reliability_info7 = 额定点火次数 // "Rated ignitions"
    #KERBALISMLITE_Reliability_info8 = 辐射等级 // "Radiation rating"
    #KERBALISMLITE_Reliability_info9 = 高规格 // "High quality"
    #KERBALISMLITE_Reliability_info10 = 额外成本 // "Extra cost"
    #KERBALISMLITE_Reliability_info11 = 额外质量 // "Extra mass"
    //
    // Module : Sensor
    //
    #KERBALISMLITE_Sensor_insideatmosphere = 在<b>大气</b>内(<<1>>) // "inside <b>atmosphere</b>(<<1>>)"
    #KERBALISMLITE_Sensor_info = 将遥测读数添加到部分ui和遥测面板 // "Add telemetry readings to the part ui, and to the telemetry panel"
    #KERBALISMLITE_Sensor_Type = 类型 // "Type"
    #KERBALISMLITE_Sensor_shorttextinfo1 = 这里什么都没有 // "nothing here"
    #KERBALISMLITE_Sensor_shorttextinfo2 = 就快爆表了! // "almost one"
    #KERBALISMLITE_Sensor_shorttextinfo3 = 哇哦! // "WOW!"
    #KERBALISMLITE_Sensor_solarflux = 太阳辐射 // "solar flux"
    #KERBALISMLITE_Sensor_albedoflux = 反照率辐射 // "albedo flux"
    #KERBALISMLITE_Sensor_bodyflux = 天体辐射 // "body flux"
    #KERBALISMLITE_Sensor_environment = 环境 // "environment"
    #KERBALISMLITE_Sensor_habitats = 生活环境 // "habitats"
    #KERBALISMLITE_Sensor_insideocean = 在<b>海洋</b>内 // "inside <b>ocean</b>"
    #KERBALISMLITE_Sensor_breathable = 可呼吸 // "breathable"
    #KERBALISMLITE_Sensor_notbreathable = 不可呼吸 // "not breathable"
    #KERBALISMLITE_Sensor_insidethermosphere = 在<b>大气热层</b>内 // "inside <b>thermosphere</b>"
    #KERBALISMLITE_Sensor_insideexosphere = 在<b>散逸层</b>内 // "inside <b>exosphere</b>"
    #KERBALISMLITE_Sensor_Graviolidetection = 每年的重力探测事件: // "Gravioli detection events per-year: "
    #KERBALISMLITE_Sensor_info1 = 难以捉摸的负重力粒子\n似乎比预期更难探测到 // "The elusive negative gravioli particle\nseems to be much harder to detect than expected."
    #KERBALISMLITE_Sensor_info2 = 另一方面\n,周围似乎有大量无用的\n正引力子 // "On the other\nhand there seems to be plenty\nof useless positive graviolis around."
    //
    // Module : Sickbay
    //
    #KERBALISMLITE_Sickbay_cureEverybody = <<1>>: 放下 <<2>> // "<<1>>: dismiss <<2>>"
    #KERBALISMLITE_Sickbay_cureEverybody2 = <<1>>: 治愈 <<2>> // "<<1>>: cure <<2>>"
    #KERBALISMLITE_Sickbay_cure = 治疗 // "cure"
    #KERBALISMLITE_Sickbay_Start_Stop = 开始/停止 // "Start/Stop"
    #KERBALISMLITE_Sickbay_running = 运行中 // "running"
    #KERBALISMLITE_Sickbay_stopped = 停止 // "stopped"
    #KERBALISMLITE_Sickbay_info1 = 治疗 // "Cures"
    #KERBALISMLITE_Sickbay_info2 = 所有的坎巴拉人在部件 // "All kerbals in part"
    #KERBALISMLITE_Sickbay_info3 = 容量 // "Capacity"
    #KERBALISMLITE_Sickbay_info4 = <<1>>坎巴拉人 // "<<1>> Kerbals"
    //
    // Module : SolarPanelFixer
    //
    #KERBALISMLITE_SolarPanelFixer_occludedby = 被<<1>>阻挡 // "occluded by <<1>>"
    #KERBALISMLITE_SolarPanelFixer_Solarpanel = 太阳能电池板 // "Solar panel"
    #KERBALISMLITE_SolarPanelFixer_Solarpaneloutput = 太阳能电池板输出 // "Solar panel output"
    #KERBALISMLITE_SolarPanelFixer_simulated = <color=#00ff00>模拟</color> // "<color=#00ff00>simulated</color>"
    #KERBALISMLITE_SolarPanelFixer_ignored = <color=#ffff00>忽略</color> // "<color=#ffff00>ignored</color>"
    #KERBALISMLITE_SolarPanelFixer_inshadow = 在暗面 // "in shadow"
    #KERBALISMLITE_SolarPanelFixer_occludedbyterrain = 被地形阻挡 // "occluded by terrain"
    #KERBALISMLITE_SolarPanelFixer_badorientation = 不好的方向 // "bad orientation"
    #KERBALISMLITE_SolarPanelFixer_analytic = 分析 // "analytic"
    #KERBALISMLITE_SolarPanelFixer_exposure = 光照 // "exposure"
    #KERBALISMLITE_SolarPanelFixer_wear = 耗损 // "wear"
    #KERBALISMLITE_SolarPanelFixer_Selecttrackedstar = 选择追踪恒星 // "Select tracked star"
    #KERBALISMLITE_SolarPanelFixer_SelectTrackingBody = 选择追踪天体 // "SelectTrackingBody"
    #KERBALISMLITE_SolarPanelFixer_SelectTrackedstar_msg = 选择您想要此太阳能电池板追踪的恒星. // "Select the star you want to track with this solar panel."
    #KERBALISMLITE_SolarPanelFixer_Automatic = 自动 // "Automatic"
    #KERBALISMLITE_SolarPanelFixer_retracted = 收回 // "retracted"
    #KERBALISMLITE_SolarPanelFixer_extending = 展开中 // "extending"
    #KERBALISMLITE_SolarPanelFixer_retracting = 收回中 // "retracting"
    #KERBALISMLITE_SolarPanelFixer_broken = 损坏 // "broken"
    #KERBALISMLITE_SolarPanelFixer_failure = 故障 // "failure"
    #KERBALISMLITE_SolarPanelFixer_invalidstate = 无效状态 // "invalid state"
    #KERBALISMLITE_SolarPanelFixer_Trackedstar = 恒星追踪 // "Tracked star"
    #KERBALISMLITE_SolarPanelFixer_AutoTrack = [自动] : // "[Auto] : "
    //
    // Class : Callbacks
    //
    #KERBALISMLITE_CallBackMsg_EvaNoMP = 宇航服内已没有任何<<1>> // "There isn't any <<1>> in the EVA suit"
    #KERBALISMLITE_CallBackMsg_EvaNoMP2 = 抓稳梯子千万别放手! // "Don't let the ladder go!"
    #KERBALISMLITE_CallBackMsg_PROGRESS = 进展 // "PROGRESS"
    #KERBALISMLITE_CallBackMsg_PROGRESS2 = 我们的科学家刚刚取得了突破 // "Our scientists just made a breakthrough"
    //
    // Class : Preferences
    //
    #KERBALISMLITE_Preferences_Reliability = 可靠性 // "Reliability"
    #KERBALISMLITE_HighlightMalfunctions = 故障高亮显示 // "Highlight Malfunctions"
    #KERBALISMLITE_HighlightMalfunctions_desc = 飞行中高亮显示故障部件 // "Highlight faild parts in flight"
    #KERBALISMLITE_PartMalfunctions = 部件故障 // "Part Malfunctions"
    #KERBALISMLITE_PartMalfunctions_desc = 允许引擎故障的发生, 基于该部件的老化程度和平均故障间隔时间(MTBF) // "Allow engine failures based on part age and mean time between failures"
    #KERBALISMLITE_CriticalFailureRate = 严重故障率 // "Critical Failure Rate"
    #KERBALISMLITE_CriticalFailureRate_desc = 导致严重故障的发生比例 // "Proportion of malfunctions that lead to critical failures"
    #KERBALISMLITE_FixableFailureRate = 可修复故障率 // "Fixable Failure Rate"
    #KERBALISMLITE_FixableFailureRate_desc = 可以远程修复的故障发生比例 // "Proportion of malfunctions that can be fixed remotely"
    #KERBALISMLITE_IncentiveRedundancy = 激励冗余 // "Incentive Redundancy"
    #KERBALISMLITE_IncentiveRedundancy_desc = 每次故障都会增加相同冗余部件\n的平均故障间隔时间(MTBF) // "Each malfunction will increase the MTBF\nof components in the same redundancy group"
    #KERBALISMLITE_EngineMalfunctions = 发动机故障 // "Engine Malfunctions"
    #KERBALISMLITE_EngineMalfunctions_desc = 允许发动机在点火时或超过额定燃烧时间时发生故障 // "Allow engine failures on ignition and exceeded burn durations"
    #KERBALISMLITE_EngineIgnitionFailureChance = 发动机点火故障率 // "Engine Ignition Failure Chance"
    #KERBALISMLITE_EngineIgnitionFailureChance_desc = 调整发动机在点火时发生故障的概率 // "Adjust the probability of engine failures on ignition"
    #KERBALISMLITE_EngineBurnFailureChance = 发动机过度燃烧故障概率 // "Engine Burn Failure Chance"
    #KERBALISMLITE_EngineBurnFailureChance_desc = 调整由超过额定燃烧时间引起的引擎故障的概率 // "Adjust the probability of an engine failure caused by excessive burn time"
    //
    #KERBALISMLITE_Preferences_Science = 科学 // "Science"
    #KERBALISMLITE_TransmitScienceImmediately = 即时传输科学数据 // "Transmit Science Immediately"
    #KERBALISMLITE_TransmitScienceImmediately_desc = 自动标记要传输的科学文件 // "Automatically flag science files for transmission"
    #KERBALISMLITE_AnalyzeSamplesImmediately = 即时分析样品 // "Analyze Samples Immediately"
    #KERBALISMLITE_AnalyzeSamplesImmediately_desc = 自动标记样品供实验室分析 // "Automatically flag samples for analysis in a lab"
    #KERBALISMLITE_AntennaSpeed = 天线传输速度 // "Antenna Speed"
    #KERBALISMLITE_AntennaSpeed_desc = 天线带宽系数 // "Antenna Bandwidth factor"
    #KERBALISMLITE_Alwaysallowsampletransfers = 总是允许样本传输 // "Always allow sample transfers"
    #KERBALISMLITE_Alwaysallowsampletransfers_desc = 当关闭时，样品转移只能在有乘员的载具上进行 // "When off, sample transfer is only available in crewed vessels"
    //
    #KERBALISMLITE_Preferences_Notifications = 通知 // "Notifications"
    #KERBALISMLITE_ElectricalCharge = 电力 // "Electrical Charge"
    #KERBALISMLITE_ElectricalCharge_desc = 当电力级别较低时显示通知\n(预设，可更改) // "Show a message when EC level is low\n(Preset, can be changed per vessel)"
    #KERBALISMLITE_Supplies = 物资 // "Supplies"
    #KERBALISMLITE_Supplies_desc = 当物质资源水平较低时显示通知\n(预设，可更改) // "Show a message when supply resources level is low\n(Preset, can be changed per vessel)"
    #KERBALISMLITE_Signal = 信号 // "Signal"
    #KERBALISMLITE_Signal_desc = 当信号丢失或连接时显示通知\n(预设，可更改) // "Show a message when signal is lost or obtained\n(Preset, can be changed per vessel)"
    #KERBALISMLITE_Failures = 故障 // "Failures"
    #KERBALISMLITE_Failures_desc = 当部件发生故障时显示通知\n(预设，可更改) // "Show a message when a components fail\n(Preset, can be changed per vessel)"
    #KERBALISMLITE_SpaceWeather = 太空天气 // "Space Weather"
    #KERBALISMLITE_SpaceWeather_desc = 发生日冕物质抛射事件时显示通知\n(预设，可更改) // "Show a message for CME events\n(Preset, can be changed per vessel)"
    #KERBALISMLITE_Scripts = 脚本 // "Scripts"
    #KERBALISMLITE_Scripts_desc = 执行脚本时显示通知\n(预设，可更改) // "Show a message when scripts are executed\n(Preset, can be changed per vessel)"
    #KERBALISMLITE_StockMessages = 游戏通知 // "Stock Messages"
    #KERBALISMLITE_StockMessages_desc = 使用游戏自带信息系统，而不是我们自己的 // "Use the stock message system instead of our own"
    #KERBALISMLITE_MessageDuration = 通知时间 // "Message Duration"
    #KERBALISMLITE_MessageDuration_desc = 屏幕上消息的持续时间(以秒为单位) // "Duration of messages on screen in seconds"
    //
    #KERBALISMLITE_Preferences_Comfort = 舒适 // "Comfort"
    #KERBALISMLITE_StressBreakdowns = 压力崩溃 // "Stress Breakdowns"
    #KERBALISMLITE_StressBreakdowns_desc = 坎巴拉人在高压力下会犯错误 // "Kerbals can make mistakes when they're under stress"
    #KERBALISMLITE_StressBreakdownProbability = 压力崩溃概率 // "Stress Breakdown Probability"
    #KERBALISMLITE_StressBreakdownProbability_desc = 每年一个由压力引起的错误的概率 // "Probability of one stress induced mistake per year"
    #KERBALISMLITE_IdealLivingSpace = 理想生活空间大小 // "Ideal Living Space"
    #KERBALISMLITE_IdealLivingSpace_desc = 理想的生活空间坎巴拉人/m^3 // "Ideal living space per-capita in m^3"
    #KERBALISMLITE_FirmGroundFactor = 坚实地面系数 // "Firm Ground Factor"
    #KERBALISMLITE_FirmGroundFactor_desc = 有东西可以在踩在上面行走 // "Having something to walk on"
    #KERBALISMLITE_ExerciseFactor = 锻炼系数 // "Exercise Factor"
    #KERBALISMLITE_ExerciseFactor_desc = 有一个跑步机 // "Having a treadmill"
    #KERBALISMLITE_SocialFactor = 社会系数 // "Social Factor"
    #KERBALISMLITE_SocialFactor_desc = 载具上有一个以上的乘员 // "Having more than one crew on a vessel"
    #KERBALISMLITE_CallHomeFactor = 家乡连接系数 // "Call Home Factor"
    #KERBALISMLITE_CallHomeFactor_desc = 有链路可以与Kerbin建立连接 // "Having a way to communicate with Kerbin"
    #KERBALISMLITE_PanoramaFactor = 全景系数 // "Panorama Factor"
    #KERBALISMLITE_PanoramaFactor_desc = 全景舱的舒适度系数 // "Comfort factor for having a panorama window"
    #KERBALISMLITE_PlantsFactor = 植物系数 // "Plants Factor"
    #KERBALISMLITE_PlantsFactor_desc = 照料植物可是一种自我慰藉 // "There is some comfort in tending to plants"
    //
    #KERBALISMLITE_Preferences_Radiation = 辐射 // "Radiation"
    #KERBALISMLITE_LifetimeRadiation = 终身辐射 // "Lifetime Radiation"
    #KERBALISMLITE_LifetimeRadiation_desc = 不会重置在Kerbin上的回收坎巴拉人的辐射值 // "Do not reset radiation values for kerbals recovered on kerbin"
    #KERBALISMLITE_Stormprobability = 风暴概率 // "Storm probability"
    #KERBALISMLITE_Stormprobability_desc = 太阳风暴概率 // "Probability of solar storms"
    #KERBALISMLITE_stormDurationHours = 平均风暴时间(小时) // "Average storm duration (hours)"
    #KERBALISMLITE_stormDurationHours_desc = 太阳风暴的平均持续时间(小时) // "Average duration of a sun storm in hours"
    #KERBALISMLITE_stormRadiation = 风暴平均辐射 rad/h // "Average storm radiation rad/h"
    #KERBALISMLITE_stormRadiation_desc = 太阳风暴期间的辐射 // "Radiation during a solar storm"
    #KERBALISMLITE_ShieldingEfficiency = 屏蔽效率 // "Shielding Efficiency"
    #KERBALISMLITE_ShieldingEfficiency_desc = 屏蔽阻挡辐射的比例(以最大剂量计) // "Proportion of radiation blocked by shielding (at max amount)"
    //
    // Planner UI
    //
    #KERBALISMLITE_Harvests = 收成 // "Harvests"
    #KERBALISMLITE_Planner_Targetbody = 目标天体 // "Target body"
    #KERBALISMLITE_Planner_SunlightNominal = 在阳光下\n太阳能电池板输出的<b>标准值</b> // "In sunlight\n<b>Nominal</b> solar panel output"
    #KERBALISMLITE_Planner_SunlightSimulated = 在阳光下太阳能电池板输出<b>估计值</b><i>阳光方向:看阴影!</i> // "In sunlight\n<b>Estimated</b> solar panel output\n<i>Sunlight direction : look at the shadows !</i>"
    #KERBALISMLITE_Planner_Shadow = 在星球暗面 // "In shadow"
    #KERBALISMLITE_Planner_Targetsituation = 目标处境 // "Target situation"
    #KERBALISMLITE_Planner_RenderQuote = 在为上太空做准备的时候，我总是发\n现计划是没用的，但计划是必不可少的.\nWernher von Kerman // "In preparing for space, I have always found that\nplans are useless but planning is indispensable.\nWernher von Kerman"
    #KERBALISMLITE_Planner_Source = 源 // "Source"
    #KERBALISMLITE_Planner_Flux = 光通量 // "Flux"
    #KERBALISMLITE_Planner_Temp = 温度 // "Temp"
    #KERBALISMLITE_Planner_solar = 太阳辐射通量 // "solar"
    #KERBALISMLITE_Planner_albedo = 反照率通量 // "albedo"
    #KERBALISMLITE_Planner_body = 天体辐射通量 // "body"
    #KERBALISMLITE_Planner_background = 背景辐射通量 // "background"
    #KERBALISMLITE_Planner_total = 总辐射通量 // "total"
    #KERBALISMLITE_Planner_pressure = 大气压强 // "pressure"
    #KERBALISMLITE_Planner_temperature = 温度 // "temperature"
    #KERBALISMLITE_Planner_atmospheric = 空气 // "atmospheric"
    #KERBALISMLITE_Planner_difference = 温差 // "difference"
    #KERBALISMLITE_Planner_difference_desc = 外部温度和生存温度的差值 // "difference between external and survival temperature"
    #KERBALISMLITE_Planner_atmosphere = 存在大气 // "atmosphere"
    #KERBALISMLITE_Planner_atmosphere_yes = 是 // "yes"
    #KERBALISMLITE_Planner_atmosphere_no = 否 // "no"
    #KERBALISMLITE_Planner_shadowtime = 暗面时间 // "shadow time"
    #KERBALISMLITE_Planner_shadowtime_desc = 在轨道上处于\n暗面中的时间 // "the time in shadow\nduring the orbit"
    #KERBALISMLITE_Planner_ELECTRICCHARGE = 电力 // "ELECTRIC CHARGE"
    #KERBALISMLITE_Planner_storage = 存储 // "storage"
    #KERBALISMLITE_Planner_consumed = 消耗 // "consumed"
    #KERBALISMLITE_Planner_produced = 产电 // "produced"
    #KERBALISMLITE_Planner_duration = 持续时间 // "duration"
    #KERBALISMLITE_Planner_STRESS = 压力 // "STRESS"
    #KERBALISMLITE_Planner_volumepercapita = 人均分配空间: // "volume per-capita:"
    #KERBALISMLITE_Planner_ideallivingspace = 理想生活空间: // "ideal living space:"
    #KERBALISMLITE_Planner_livingspace = 生活空间 // "living space"
    #KERBALISMLITE_Planner_comfort = 舒适 // "comfort"
    #KERBALISMLITE_Planner_analyzerpressurized1 = 在有压力的环境中自由漫游\n要比穿着太空服好得多. // "Free roaming in a pressurized environment is\nvastly superior to living in a suit."
    #KERBALISMLITE_Planner_analyzerpressurized2 = 一直被迫穿着太空服大大降低\n了船员的生活质量.\n最糟糕的是还要穿尿布. // "Being forced inside a suit all the time greatly\nreduces the crews quality of life.\nThe worst part is the diaper."
    #KERBALISMLITE_Planner_pressurized = 加压 // "pressurized"
    #KERBALISMLITE_Planner_pressurized_yes = 是 // "yes"
    #KERBALISMLITE_Planner_pressurized_no = 否 // "no"
    #KERBALISMLITE_Planner_lifeestimate = 预计任务时间 // "duration"
    #KERBALISMLITE_Planner_surface = 地面 // "surface"
    #KERBALISMLITE_Planner_magnetopause = 磁层 // "magnetopause"
    #KERBALISMLITE_Planner_innerbelt = 内部辐射带 // "inner belt"
    #KERBALISMLITE_Planner_outerbelt = 外部辐射带 // "outer belt"
    #KERBALISMLITE_Planner_interplanetary = 星际间 // "interplanetary"
    #KERBALISMLITE_Planner_interstellar = 星际 // "interstellar"
    #KERBALISMLITE_Planner_storm = 风暴 // "storm"
    #KERBALISMLITE_Planner_RADIATION = 辐射 // "RADIATION"
    #KERBALISMLITE_Planner_orbit = 轨道 // "orbit"
    #KERBALISMLITE_Planner_emission = 放出 // "emission"
    #KERBALISMLITE_Planner_activeshielding = 主动屏蔽装置 // "active shielding"
    #KERBALISMLITE_Planner_shielding = 屏蔽材料 // "shielding"
    //traduce the redundancy metric to string
    #KERBALISMLITE_Planner_none = 无 // "none"
    #KERBALISMLITE_Planner_poor = 很差 // "poor"
    #KERBALISMLITE_Planner_okay = 还行 // "okay"
    #KERBALISMLITE_Planner_great = 很好 // "great"
    #KERBALISMLITE_Planner_engineer_tip = 载具上的工程师应该能\n处理所有的修理工作 // "The engineer on board should\nbe able to handle all repairs"
    #KERBALISMLITE_Planner_safemode_tip = 我们能远程\n修复一些故障 // "We have a chance of repairing\nsome of the malfunctions remotely"
    #KERBALISMLITE_Planner_RELIABILITY = 可靠性 // "RELIABILITY"
    #KERBALISMLITE_Planner_malfunctions = 故障 // "malfunctions"
    #KERBALISMLITE_Planner_malfunctions_tip = 整艘载具的\n平均情况估计 // "average case estimate\nfor the whole vessel"
    #KERBALISMLITE_Planner_highquality = 高质量规格 // "high quality"
    #KERBALISMLITE_Planner_highquality_tip = 高质量部件的百分比 // "percentage of high quality components"
    #KERBALISMLITE_Planner_redundancy = 冗余 // "redundancy"
    #KERBALISMLITE_Planner_repair = 修理 // "repair"
    #KERBALISMLITE_Planner_scrubbingunnecessary = 不需要 // "not required"
    #KERBALISMLITE_Planner_noscrubbing = 无 // "none"
    #KERBALISMLITE_Planner_insufficientscrubbing = 不足 // "inadequate"
    #KERBALISMLITE_Planner_sufficientscrubbing = 良好 // "good"
    #KERBALISMLITE_Planner_pressurizationunnecessary = 不需要 // "not required"
    #KERBALISMLITE_Planner_nopressurecontrol = 无 // "none"
    #KERBALISMLITE_Planner_insufficientpressurecontrol = 不足 // "inadequate"
    #KERBALISMLITE_Planner_sufficientpressurecontrol = 良好 // "good"
    #KERBALISMLITE_Planner_HABITAT = 生活环境 // "HABITAT"
    #KERBALISMLITE_Planner_volume = 体积 // "volume"
    #KERBALISMLITE_Planner_volume_tip = 有效生境的体积 // "volume of enabled habitats"
    #KERBALISMLITE_Planner_habitatssurface = 表面积 // "surface"
    #KERBALISMLITE_Planner_habitatssurface_tip = 有效生境的表面积 // "surface of enabled habitats"
    #KERBALISMLITE_Planner_scrubbing = 处理废气中 // "scrubbing"
    #KERBALISMLITE_Planner_pressurization = 加压 // "pressurization"
    //
    // Automation > Devices
    //
    #KERBALISMLITE_Statu_unknown = 未知 // "unknown"
    #KERBALISMLITE_Antenna_statu_unknown = 未知 // "unknown"
    #KERBALISMLITE_Experiment_on = 在 // "on                        //on partinfo.title"
    #KERBALISMLITE_Experiment_status = 状态 : // "status :"
    #KERBALISMLITE_Experiment_issue = 问题 : // "issue :"
    #KERBALISMLITE_Experiment_sciencevalue = 科学点数 : // "science value :"
    #KERBALISMLITE_Experiment_completion = 完成 : // "completion :"
    #KERBALISMLITE_SolarPanel_deployable = 太阳能电池板 (可展开) // "solar panel (deployable)"
    #KERBALISMLITE_SolarPanel_nonretractable = 太阳能电池板 (不可收回) // "solar panel (non retractable)"
    //
    // Class : Storm
    //
    #KERBALISMLITE_Storm_msg1 = 在 <<1>> 系统上侦测到日冕物质抛射 // "The coronal mass ejection hit <<1>> system"
    #KERBALISMLITE_Storm_msg2 = 我们的天文台报告了日冕物质向<<1>>系统的喷射情况 // "Our observatories report a coronal mass ejection directed toward  <<1>> system"
    #KERBALISMLITE_Storm_msg3 = 发生在<<1>>系统的太阳风暴结束了 // "The solar storm at <<1>> system is over"
    #KERBALISMLITE_Storm_msg4 = <<1>>周围的太阳风暴结束了 // "The solar storm around <<1>> is over"
    #KERBALISMLITE_Storm_msg5 = 在 <<1>> 上侦测到日冕物质抛射 // "The coronal mass ejection hit <<1>>"
    #KERBALISMLITE_Storm_msg6 = 我们的天文台报告了日冕物质向<<1>>喷射的情况 // "Our observatories report a coronal mass ejection directed toward <<1>>"
    #KERBALISMLITE_Storm_msg1text = 风暴持续时间: // "Storm duration:"
    #KERBALISMLITE_Storm_msg2text = 碰撞时间: // "Time to impact:"
    //
    // Science > ExperimentInfo
    //
    #KERBALISMLITE_ExperimentInfo_Unknown = 未知 // "Unknown"
    #KERBALISMLITE_Experimentinfo_Datasize = 数据大小 // "Data size"
    #KERBALISMLITE_Experimentinfo_generatesample = 将生成一个样本. // "Will generate a sample."
    #KERBALISMLITE_Experimentinfo_Samplesize = 样本大小: // "Sample size:"
    #KERBALISMLITE_Experimentinfo_Samplemass = 样本质量: // "Sample mass:"
    #KERBALISMLITE_Experimentinfo_Situations = 情况:\n // "Situations:\n"
    #KERBALISMLITE_Experimentinfo_Asteroid = 坎巴拉人EVA时可以采集小行星样本 // "Asteroid samples can be taken by kerbals on EVA"
    #KERBALISMLITE_Experimentinfo_scannerarm = 用扫描臂分析 // "Analyse with a scanner arm"
    #KERBALISMLITE_Experimentinfo_smallRoc = EVA时可收集样本 // "Collectable on EVA as a sample"
    #KERBALISMLITE_Experimentinfo_smallRoc2 = EVA时不可收集样本 // "Can't be collected on EVA"
    #KERBALISMLITE_Experimentinfo_smallRoc3 = 在<<1>>上发现 : // "Found on <<1>>'s :"
    #KERBALISMLITE_Experimentinfo_Bodiesallowed = 可运行天体条件 // "Bodies allowed:"
    #KERBALISMLITE_Experimentinfo_Bodiesnotallowed = 不可运行天体条件 // "Bodies not allowed:"
    #KERBALISMLITE_Experimentinfo_BodyCondition1 = 有大气 // "atmospheric"
    #KERBALISMLITE_Experimentinfo_BodyCondition2 = 无大气 // "non-atmospheric"
    #KERBALISMLITE_Experimentinfo_BodyCondition3 = 气态 // "gaseous"
    #KERBALISMLITE_Experimentinfo_BodyCondition4 = 固态 // "solid"
    #KERBALISMLITE_Experimentinfo_BodyCondition5 = 海洋 // "oceanic"
    #KERBALISMLITE_Experimentinfo_BodyCondition6 = 母星 // "home body"
    #KERBALISMLITE_Experimentinfo_BodyCondition7 = 母星和其卫星 // "home body and its moons"
    #KERBALISMLITE_Experimentinfo_BodyCondition8 = 行星 // "planets"
    #KERBALISMLITE_Experimentinfo_BodyCondition9 = 卫星 // "moons"
    #KERBALISMLITE_Experimentinfo_BodyCondition10 = 恒星 // "suns"
    //
    // ???
    //
    //show warning message when a vessel cross a radiation belt
    #KERBALISMLITE_BeltWarnings_msg = <<1>>正在穿过<<2>>的辐射带 // "<<1>> is crossing <<2>> radiation belt"
    // Remove Symmetry On Visible Resource Switch
    #KERBALISMLITE_RemoveSymmetry_msg = 移除了<<1>>的对称性由于更改了<<2>>的容量. // "Symmetry on <<1>>\nhas been removed because of switching the <<2>> capacity."
    // Notify the user when crop can be harvested
    #KERBALISMLITE_harvestedready_msg = 在<<1>>上的作物可以收获 // "On <<1>> the crop is ready to be harvested"
    #KERBALISMLITE_BeltWarnings_msgSubtext = 暴露在极端的辐射中 // "Exposed to extreme radiation"
    #KERBALISMLITE_Fittingparticles_msg = 拟合粒子到预置的距离场 // "Fitting particles to signed distance fields"
    #KERBALISMLITE_ComebackLater_msg = 请稍后回来查看 // "Come back in a minute"
    // Kerbal belong to a rescue mission
    //eg. we found Bill Kerman He's still alive!
    #KERBALISMLITE_Rescuemission_msg1 = 我们找到了 // "We found"
    #KERBALISMLITE_Kerbal_Male = 他 // "He"
    #KERBALISMLITE_Kerbal_Female = 她 // "She"
    #KERBALISMLITE_Rescuemission_msg2 = 还活着! // "'s still alive!"
    //Messages muted Messages
    #KERBALISMLITE_Messagesmuted = 消息静默 // "Messages muted"
    #KERBALISMLITE_Messagesmuted_subtext = 在外面注意安全! 小心! 谨记! // "Be careful out there"
    #KERBALISMLITE_Messagesunmuted = 消息静默取消 // "Messages unmuted"
    //Kerbal Breakdown messages
    #KERBALISMLITE_Kerbalmumbling = $ON_VESSEL$KERBAL 在太空中待太久了 // "$ON_VESSEL$KERBAL has been in space for too long"
    #KERBALISMLITE_Kerbalmumbling_subtext = 语无伦次地喃喃自语 // "Mumbling incoherently"
    #KERBALISMLITE_Kerbalfatfinger = $ON_VESSEL$KERBAL 正在随意地按控制面板上的按钮 // "$ON_VESSEL$KERBAL is pressing buttons at random on the control panel"
    #KERBALISMLITE_Kerbalfatfinger_subtext = 科学数据已经丢失 // "Science data has been lost"
    #KERBALISMLITE_Kerbalrage = $ON_VESSEL$KERBAL被盲目的愤怒所占据 // "$ON_VESSEL$KERBAL is possessed by a blind rage"
    #KERBALISMLITE_Kerbalrage_subtext = 一个部件已损坏 // "A component has been damaged"
    #KERBALISMLITE_Kerbalwrongvalve = $ON_VESSEL$KERBAL 打开了错误阀门 // "$ON_VESSEL$KERBAL opened the wrong valve"
    #KERBALISMLITE_Kerbalwrongvalve_subtext = 已丢失 // "has been lost"
    //
    // Science
    //
    //Science messages
    #KERBALISMLITE_Scienctransmitted_title = 传输 // "transmitted"
    #KERBALISMLITE_Nosciencegain = 无科学点数收集:我们已经有了这些数据 // "no science gain : we already had this data"
    #KERBALISMLITE_SciencresultText1 = 我们的研究人员马上就要开始了 // "Our researchers will jump on it right now"
    #KERBALISMLITE_SciencresultText2 = 这引起了一些兴奋 // "This cause some excitement"
    #KERBALISMLITE_SciencresultText3 = 这些结果引起了研发中心的骚动 // "These results are causing a brouhaha in R&D"
    #KERBALISMLITE_SciencresultText4 = 我们的科学家看起来非常纳闷 // "Our scientists look very confused"
    #KERBALISMLITE_SciencresultText5 = 科学家们将不会相信这些读数 // "The scientists won't believe these readings"
    //Science Situation
    #KERBALISMLITE_Situation_None = 无 // "none"
    #KERBALISMLITE_Situation_Landed = 着陆 // "landed"
    #KERBALISMLITE_Situation_Splashed = 溅落 // "splashed"
    #KERBALISMLITE_Situation_Flyinglow = 低空飞行 // "flying low"
    #KERBALISMLITE_Situation_Flyinghigh = 高空飞行 // "flying high"
    #KERBALISMLITE_Situation_Spacelow = 近地太空 // "space low"
    #KERBALISMLITE_Situation_SpaceHigh = 远地太空 // "space high"
    #KERBALISMLITE_Situation_Surface = 地面 // "surface"
    #KERBALISMLITE_Situation_Flying = 飞行 // "flying"
    #KERBALISMLITE_Situation_Space = 太空 // "space"
    #KERBALISMLITE_Situation_BodyGlobal = 全球 // "global"
    #KERBALISMLITE_Situation_biomes = (生态群落) // "(biomes)"
    //Virtual Biome
    #KERBALISMLITE_Situation_NoBiome = 全球 // "global"
    #KERBALISMLITE_Situation_NorthernHemisphere = 北半球 // "north hemisphere"
    #KERBALISMLITE_Situation_SouthernHemisphere = 南半球 // "south hemisphere"
    #KERBALISMLITE_Situation_InnerBelt = 内部辐射带 // "inner belt"
    #KERBALISMLITE_Situation_OuterBelt = 外部部辐射带 // "outer belt"
    #KERBALISMLITE_Situation_Magnetosphere = 磁层 // "magnetosphere"
    #KERBALISMLITE_Situation_Interstellar = 星际 // "interstellar"
    #KERBALISMLITE_Situation_Reentry = 载入 // "reentry"
    #KERBALISMLITE_Situation_Storm = 太阳风暴 // "solar storm"
    //Log Manager
    #KERBALISMLITE_LogMan_LOGS = 日志 // "LOGS"
    #KERBALISMLITE_LogMan_ALLLOGS = 全部日志 // "ALL LOGS"
    #KERBALISMLITE_LogMan_nologs = 无日志 // "no logs"
    #KERBALISMLITE_LogMan_ALERT = 注意\u0020\u0020\u0020 // "ALERT\u0020\u0020\u0020"
    //Flight Logger
    #KERBALISMLITE_FlightLogger_MaterialFatigue = <<1>>因材料疲劳失效 // "<<1>> failed because of material fatigue"
    #KERBALISMLITE_FlightLogger_Destruction = <<1>>上的燃油系统发生泄漏导致发动机损坏 // "<<1>> fuel system leak caused destruction of the engine"
    #KERBALISMLITE_FlightLogger_Ignition = <<1>> 由点火引发故障 // "<<1>> failure on ignition"
    //Experiment required
    #KERBALISMLITE_ExperimentReq_OrbitMinInclination = 最小倾角 // "Min. inclination "
    #KERBALISMLITE_ExperimentReq_OrbitMaxInclination = 最大倾角 // "Max. inclination "
    #KERBALISMLITE_ExperimentReq_OrbitMinEccentricity = 最小离心率 // "Min. eccentricity "
    #KERBALISMLITE_ExperimentReq_OrbitMaxEccentricity = 最大离心率 // "Max. eccentricity "
    #KERBALISMLITE_ExperimentReq_OrbitMinArgOfPeriapsis = 最小近心点角 // "Min. argument of Pe "
    #KERBALISMLITE_ExperimentReq_OrbitMaxArgOfPeriapsis = 最大近心点角 // "Max. argument of Pe "
    #KERBALISMLITE_ExperimentReq_TemperatureMin = 最小温度 // "Min. temperature "
    #KERBALISMLITE_ExperimentReq_TemperatureMax = 最大温度 // "Max. temperature "
    #KERBALISMLITE_ExperimentReq_AltitudeMin = 最小高度 // "Min. altitude "
    #KERBALISMLITE_ExperimentReq_AltitudeMax = 最大高度 // "Max. altitude "
    #KERBALISMLITE_ExperimentReq_RadiationMin = 最小辐射 // "Min. radiation "
    #KERBALISMLITE_ExperimentReq_RadiationMax = 最大辐射 // "Max. radiation "
    #KERBALISMLITE_ExperimentReq_VolumePerCrewMin = 最小体积/人 // "Min. vol./crew "
    #KERBALISMLITE_ExperimentReq_VolumePerCrewMax = 最大体积/人 // "Max. vol./crew "
    #KERBALISMLITE_ExperimentReq_SunAngleMin = 最小太阳高度角 // "Min sun-surface angle"
    #KERBALISMLITE_ExperimentReq_SunAngleMax = 最大太阳高度角 // "Max sun-surface angle"
    #KERBALISMLITE_ExperimentReq_SurfaceSpeedMin = 最小表面速度 // "Min. surface speed "
    #KERBALISMLITE_ExperimentReq_SurfaceSpeedMax = 最大表面速度 // "Max. surface speed "
    #KERBALISMLITE_ExperimentReq_VerticalSpeedMin = 最小垂直速度 // "Min. vertical speed "
    #KERBALISMLITE_ExperimentReq_VerticalSpeedMax = 最大垂直速度 // "Max. vertical speed "
    #KERBALISMLITE_ExperimentReq_SpeedMin = 最小速度 // "Min. speed "
    #KERBALISMLITE_ExperimentReq_SpeedMax = 最大速度 // "Max. speed "
    #KERBALISMLITE_ExperimentReq_DynamicPressureMin = 最小动压 // "Min dynamic pressure"
    #KERBALISMLITE_ExperimentReq_DynamicPressureMax = 最大动压 // "Max dynamic pressure"
    #KERBALISMLITE_ExperimentReq_StaticPressureMin = 最小压强 // "Min. pressure "
    #KERBALISMLITE_ExperimentReq_StaticPressureMax = 最大压强 // "Max. pressure "
    #KERBALISMLITE_ExperimentReq_AtmDensityMin = 最小大气密度 // "Min. atm. density "
    #KERBALISMLITE_ExperimentReq_AtmDensityMax = 最大大气密度 // "Max. atm. density "
    #KERBALISMLITE_ExperimentReq_AltAboveGroundMin = 最低地面高度 // "Min ground altitude"
    #KERBALISMLITE_ExperimentReq_AltAboveGroundMax = 最高地面高度 // "Max ground altitude"
    #KERBALISMLITE_ExperimentReq_MaxAsteroidDistance = 最大小行星距离 // "Max asteroid distance"
    #KERBALISMLITE_ExperimentReq_AtmosphereAltMin = 最低大气高度 // "Min atmosphere altitude "
    #KERBALISMLITE_ExperimentReq_AtmosphereAltMax = 最高大气高度 // "Max atmosphere altitude "
    #KERBALISMLITE_ExperimentReq_CrewMin = 最少乘员 // "Min. crew "
    #KERBALISMLITE_ExperimentReq_CrewMax = 最大乘员 // "Max. crew "
    #KERBALISMLITE_ExperimentReq_CrewCapacityMin = 最小乘员容量 // "Min. crew capacity "
    #KERBALISMLITE_ExperimentReq_CrewCapacityMax = 最大乘员容量 // "Max. crew capacity "
    #KERBALISMLITE_ExperimentReq_AstronautComplexLevelMin = 乘员最低等级 // "Astronaut Complex min level "
    #KERBALISMLITE_ExperimentReq_AstronautComplexLevelMax = 乘员最高等级 // "Astronaut Complex max level "
    #KERBALISMLITE_ExperimentReq_TrackingStationLevelMin = 追踪站最低等级 // "Tracking Station min level "
    #KERBALISMLITE_ExperimentReq_TrackingStationLevelMax = 追踪站最高等级 // "Tracking Station max level "
    #KERBALISMLITE_ExperimentReq_MissionControlLevelMin = 任务控制中心最低等级 // "Mission Control min level "
    #KERBALISMLITE_ExperimentReq_MissionControlLevelMax = 任务控制中心最高等级 // "Mission Control max level "
    #KERBALISMLITE_ExperimentReq_AdministrationLevelMin = 管理大楼最低等级 // "Administration min level "
    #KERBALISMLITE_ExperimentReq_AdministrationLevelMax = 管理大楼最高等级 // "Administration max level "
    #KERBALISMLITE_ExperimentReq_Part = 需要部件 // "Need part "
    #KERBALISMLITE_ExperimentReq_Module = 需要模块 // "Need module "
    //Vessel Recovery Window
    #KERBALISMLITE_VesselRecovery_title = 回收 // "recovery "
    #KERBALISMLITE_VesselRecovery_info = 科学点数回收 // "SCIENCE RECOVERED "
    #KERBALISMLITE_VesselRecovery_CREDITS = 点 // "CREDITS"
    #KERBALISMLITE_VesselRecovery_OKbutton = 确定 // "OK"
    //Statu Toggle
    #KERBALISMLITE_StatuToggle_info = 信息 // "info"
    #KERBALISMLITE_StatuToggle_Habitat = 生境 // "Habitat"
    #KERBALISMLITE_StatuToggle_Simulate = 在计划面板中模拟<<1>> // "Simulate <<1>> in planner"
    //Antenna UI
    #KERBALISMLITE_AntennaUI_unavailable = 不可用 // "unavailable"
    #KERBALISMLITE_AntennaUI_deploying = 展开中 // "deploying"
    #KERBALISMLITE_AntennaUI_type1 = 内置天线 // "internal antenna"
    #KERBALISMLITE_AntennaUI_type2 = 直连天线 // "direct antenna"
    #KERBALISMLITE_AntennaUI_type3 = 中继天线 // "relay antenna"
    //Data Transmitter info
    #KERBALISMLITE_DataTransmitter_ECidle = 电力 (闲置) // "EC (idle)"
    #KERBALISMLITE_DataTransmitter_ECTX = 电力 (传输) // "EC (transmitting)"
    #KERBALISMLITE_DataTransmitter_Maxspeed = 最大传输速度 // "Max. speed"
    }
}
